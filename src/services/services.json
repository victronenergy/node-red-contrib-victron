{
  "accharger": {
    "help": {
      "both": "<p>This node is for AC chargers.</p>",
      "input": "",
      "output": " "
    },
    "charger": [
      {
        "path": "/Ac/In/CurrentLimit",
        "type": "float",
        "name": "AC Current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Ac/In/L1/I",
        "type": "float",
        "name": "AC Current (A)"
      },
      {
        "path": "/Ac/In/L1/P",
        "type": "float",
        "name": "AC Power (W)"
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/{output}/Current",
        "type": "float",
        "name": "Output {output} - current (A)"
      },
      {
        "path": "/Dc/{output}/Temperature",
        "type": "float",
        "name": "Output {output} - temperature (°C)"
      },
      {
        "path": "/Dc/{output}/Voltage",
        "type": "float",
        "name": "Output {output} - voltage (V)"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Error",
        "enum": {
          "0": "No error",
          "1": "Err 1: Battery temperature too high",
          "2": "Err 2: Battery voltage too high",
          "3": "Err 3: Battery temperature sensor miswired (+)",
          "4": "Err 3: Battery temperature sensor miswired (-)",
          "5": "Err 5: Battery temperature sensor disconnected",
          "6": "Err 6: Battery voltage sense miswired (+)",
          "7": "Err 7: Battery voltage sense miswired (-)",
          "8": "Err 8: Battery voltage sense disconnected",
          "9": "Err 9: Battery voltage wire losses too high",
          "17": "Err 17: Charger temperature too high",
          "18": "Err 18: Charger over-current",
          "19": "Err 19: Charger current polarity reversed",
          "20": "Err 20: Bulk time limit reached",
          "22": "Err 22: Charger temperature sensor miswired",
          "23": "Err 23: Charger temperature sensor disconnected",
          "34": "Err 34: Input current too high",
          "67": "Err 67: No BMS"
        }
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Charger on/off",
        "enum": {
          "1": "On",
          "4": "Off"
        },
        "mode": "both"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the charger",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "Charge state",
        "enum": {
          "0": "Off",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize",
          "11": "Power supply mode",
          "246": "Repeated absorption",
          "247": "Equalize",
          "248": "Battery safe"
        }
      }
    ]
  },
  "acload": {
    "help": {
      "both": "<p>This node allows for AC loads",
      "input": "<p>Measuring can be done by using an energy meter and assigning it the 'ac load' role.</p>",
      "output": ""
    },
    "acload": [
      {
        "path": "/Ac/Frequency",
        "type": "float",
        "name": "AC Frequency (Hz)"
      },
      {
        "path": "/Ac/PowerFactor",
        "type": "float",
        "name": "Power Factor"
      },
      {
        "path": "/Ac/{line}/Current",
        "type": "float",
        "name": "{line} Current (A)"
      },
      {
        "path": "/Ac/{line}/Energy/Forward",
        "type": "float",
        "name": "{line} Energy (kWh)"
      },
      {
        "path": "/Ac/{line}/Power",
        "type": "float",
        "name": "{line} Power (W)"
      },
      {
        "path": "/Ac/{line}/PowerFactor",
        "type": "float",
        "name": "{line} Power Factor"
      },
      {
        "path": "/Ac/{line}/Voltage",
        "type": "float",
        "name": "{line} Voltage (V AC)"
      },
      {
        "path": "/Serial",
        "type": "string",
        "name": "Serial number"
      }
    ]
  },
  "acsystem": {
    "help": {
      "both": "<p>Managing service for Multi-RS and other future inverter/chargers.</p>",
      "input": "",
      "output": " "
    },
    "acsystem": [
      {
        "path": "/Ac/In/{phase}/CurrentLimit",
        "type": "float",
        "name": "Ac input {phase} current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Ac/In/1/{phase}/V",
        "type": "float",
        "name": "Input voltage {phase} (V AC)"
      },
      {
        "path": "/Ac/In/1/{phase}/V",
        "type": "float",
        "name": "Input voltage {phase} (V AC)"
      },
      {
        "path": "/Ac/In/1/L3/V",
        "type": "float",
        "name": "Input voltage phase 3 (V AC)"
      },
      {
        "path": "/Ac/In/1/{phase}/I",
        "type": "float",
        "name": "Input current {phase} 1 (A AC)"
      },
      {
        "path": "/Ac/In/1/{phase}/P",
        "type": "float",
        "name": "Input power {phase} (W)"
      },
      {
        "path": "/Ac/In/1/L1/F",
        "type": "float",
        "name": "Input frequency (Hz)"
      },
      {
        "path": "/Ac/Out/{phase}}/V",
        "type": "float",
        "name": "Output voltage {phase} (V AC)"
      },
      {
        "path": "/Ac/Out/{phase}/I",
        "type": "float",
        "name": "Output current {phase} (A AC)"
      },
      {
        "path": "/Ac/Out/{phase}/P",
        "type": "float",
        "name": "Output power {phase} (W)"
      },
      {
        "path": "/Ac/Out/L1/F",
        "type": "float",
        "name": "Output frequency (Hz)"
      },
      {
        "path": "/Alarms/GridLost",
        "type": "enum",
        "name": "Grid Lost Alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/PhaseRotation",
        "type": "enum",
        "name": "Phase Rotation Alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Ess/AcPowerSetpoint",
        "type": "float",
        "name": "ESS setpoint (W)",
        "mode": "both"
      },
      {
        "path": "/Ess/DisableFeedIn",
        "type": "enum",
        "name": "Disable Feed-in (into grid)",
        "enum": {
          "0": "Feed-in enabled",
          "1": "Feed-in disabled"
        },
       "mode": "both"
      },
      {
        "path": "/Ess/ActiveSocLimit",
        "type": "float",
        "name": "ESS Active SOC Limit (%)"
      },
      {
        "path": "/Settings/Ac/In/CurrentLimitEnergyMeter",
        "type": "float",
        "name": "Ac current limit at grid meter (A)",
        "mode": "both"
      },
      {
        "path": "/Settings/Ess/Mode",
        "type": "enum",
        "name": "ESS mode",
        "enum": {
          "1": "ESS with Phase Compensation",
          "2": "ESS without phase compensation",
          "3": "Disabled/External Control"
        },
        "mode": "both"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "System state",
        "enum": {
          "0": "Off",
          "1": "Low Power",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize",
          "8": "Passthru",
          "9": "Inverting",
          "10": "Power assist",
          "11": "Power supply",
          "250": "Blocked",
          "252": "External control"
        }
      }
    ]
  },
  "alternator": {
    "help": {
      "both": "<p>This node allows for monitoring the state of BMVs configured in Monitor Mode and DC meter type is Alternator or an alternator controller which is interfaced to the Venus OS.</p>",
      "input": "",
      "output": ""
    },
    "alternator": [
      {
        "path": "/Alarms/HighStarterVoltage",
        "type": "enum",
        "name": "High auxiliary voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High temperature alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowStarterVoltage",
        "type": "enum",
        "name": "Low auxiliary voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low temperature alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/{channel}/Current",
        "type": "float",
        "name": "Battery current {channel} (A)"
      },
      {
        "path": "/Dc/{channel}/Temperature",
        "type": "float",
        "name": "Battery temperature {channel} (°C)"
      },
      {
        "path": "/Dc/{channel}/Voltage",
        "type": "float",
        "name": "Battery voltage {channel} (V)"
      },
      {
        "path": "/Dc/In/V",
        "type": "float",
        "name": "Input voltage (before DC/DC converter) (V DC)"
      },
      {
        "path": "/Dc/In/P",
        "type": "float",
        "name": "Input power (W DC)"
      },
      {
        "path": "/Engine/Speed",
        "type": "float",
        "name": "Engine speed (RPM)"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Alternator error code",
        "enum": {
          "12": "High battery temperature",
          "13": "High battery voltage",
          "14": "Low battery voltage",
          "15": "VBat exceeds $CPB",
          "21": "High alternator temperature",
          "22": "Alternator overspeed",
          "24": "Internal error",
          "41": "High field FET temperature",
          "42": "Sensor missing",
          "43": "Low VAlt",
          "44": "High Voltage offset",
          "45": "VAlt exceeds $CPB",
          "53": "Battery instance out of range",
          "54": "Too many BMSes",
          "55": "AEBus fault",
          "56": "Too many Victron devices",
          "91": "BMS lost",
          "92": "Forced idle",
          "201": "DCDC converter fail",
          "51-52": "Battery disconnect request",
          "58-61": "Battery requested disconnection",
          "201-207": "DCDC error"
        }
      },
      {
        "path": "/FieldDrive",
        "type": "float",
        "name": "Alternator Field Drive %"
      },
      {
        "path": "/History/Cumulative/User/ChargedAh",
        "type": "float",
        "name": "Cumulative amp-hours charged (Ah)"
      },
      {
        "path": "/History/EnergyOut",
        "type": "float",
        "name": "Total energy produced (kWh)"
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Mode",
        "enum": {
          "1": "On",
          "4": "Off"
        }
      },
      {
        "path": "/Speed",
        "type": "float",
        "name": "Alternator speed (RPM)"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "Alternator state",
        "enum": {
          "0": "Off",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize",
          "11": "Psu",
          "252": "External control"
        }
      }
    ]
  },
  "battery": {
    "help": {
      "both": "<p>This node allows for monitoring the state of the battery.</p>",
      "input": "",
      "output": " "
    },
    "battery": [
      {
        "path": "/Alarms/Alarm",
        "type": "enum",
        "name": "Alarm",
        "enum": {
          "0": "No alarm",
          "1": "Alarm active",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/CellImbalance",
        "type": "enum",
        "name": "Cell Imbalance alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/FuseBlown",
        "type": "enum",
        "name": "Fuse blown alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighChargeCurrent",
        "type": "enum",
        "name": "High charge current alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighChargeTemperature",
        "type": "enum",
        "name": "High charge temperature alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighDischargeCurrent",
        "type": "enum",
        "name": "High discharge current alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighFusedVoltage",
        "type": "enum",
        "name": "High fused-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighInternalTemperature",
        "type": "enum",
        "name": "High internal-temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighStarterVoltage",
        "type": "enum",
        "name": "High starter-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High battery temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/InternalFailure",
        "type": "enum",
        "name": "Internal failure",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowCellVoltage",
        "type": "enum",
        "name": "Low cell voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Almost discharged",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowChargeTemperature",
        "type": "enum",
        "name": "Low charge temperature alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowFusedVoltage",
        "type": "enum",
        "name": "Low fused-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowSoc",
        "type": "enum",
        "name": "Low state-of-charge alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowStarterVoltage",
        "type": "enum",
        "name": "Low starter-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low battery temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/MidVoltage",
        "type": "enum",
        "name": "Mid-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Balancing",
        "type": "enum",
        "name": "Balancing",
        "enum": {
          "0": "Inactive",
          "1": "Active"
        }
      },
      {
        "path": "/Balancer/Status",
        "type": "enum",
        "name": "Balancer status",
        "enum": {
          "0": "Unknown",
          "1": "Balanced",
          "2": "Balancing",
          "3": "Cell imbalance"
        }
      },
      {
        "path": "/Capacity",
        "type": "float",
        "name": "Capacity (Ah)"
      },
      {
        "path": "/ConnectionInformation",
        "type": "string",
        "name": "Connection information"
      },
      {
        "path": "/ConsumedAmphours",
        "type": "float",
        "name": "Consumed Amphours (Ah)"
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/MidVoltage",
        "type": "float",
        "name": "Mid-point voltage of the battery bank (V)"
      },
      {
        "path": "/Dc/0/MidVoltageDeviation",
        "type": "float",
        "name": "Mid-point deviation of the battery bank (%)"
      },
      {
        "path": "/Dc/0/Power",
        "type": "float",
        "name": "Battery power (W)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V)"
      },
      {
        "path": "/Dc/1/Voltage",
        "type": "float",
        "name": "Starter battery voltage (V)"
      },
      {
        "path": "/Diagnostics/LastErrors/{index}/Error",
        "type": "enum",
        "name": "Diagnostics; error {index}",
        "enum": {
          "0": "No error",
          "1": "Battery initialization error",
          "2": "No batteries connected",
          "3": "Unknown battery connected",
          "4": "Different battery type",
          "5": "Number of batteries incorrect",
          "6": "Lynx Shunt not found",
          "7": "Battery measure error",
          "8": "Internal calculation error",
          "9": "Batteries in series not ok",
          "10": "Number of batteries incorrect",
          "11": "Hardware error",
          "12": "Watchdog error",
          "13": "Over voltage",
          "14": "Under voltage",
          "15": "Over temperature",
          "16": "Under temperature",
          "17": "Hardware fault",
          "18": "Standby shutdown",
          "19": "Pre-charge charge error",
          "20": "Safety contactor check error",
          "21": "Pre-charge discharge error",
          "22": "ADC error",
          "23": "Slave error",
          "24": "Slave warning",
          "25": "Pre-charge error",
          "26": "Safety contactor error",
          "27": "Over current",
          "28": "Slave update failed",
          "29": "Slave update unavailable",
          "30": "Calibration data lost",
          "31": "Settings invalid",
          "32": "BMS cable",
          "33": "Reference failure",
          "34": "Wrong system voltage",
          "35": "Pre-charge timeout"
        }
      },
      {
        "path": "/Diagnostics/LastErrors/{index}/Time",
        "type": "float",
        "name": "Diagnostics; error {index} timestamp"
      },
      {
        "path": "/Diagnostics/ShutDownsDueError",
        "type": "float",
        "name": "Diagnostics; shutdowns due to error (count)"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Error",
        "enum": {
          "0": "No error",
          "1": "Battery initialization error",
          "2": "No batteries connected",
          "3": "Unknown battery connected",
          "4": "Different battery type",
          "5": "Number of batteries incorrect",
          "6": "Lynx Shunt not found",
          "7": "Battery measure error",
          "8": "Internal calculation error",
          "9": "Batteries in series not ok",
          "10": "Number of batteries incorrect",
          "11": "Hardware error",
          "12": "Watchdog error",
          "13": "Over voltage",
          "14": "Under voltage",
          "15": "Over temperature",
          "16": "Under temperature",
          "17": "Hardware fault",
          "18": "Standby shutdown",
          "19": "Pre-charge charge error",
          "20": "Safety contactor check error",
          "21": "Pre-charge discharge error",
          "22": "ADC error",
          "23": "Slave error",
          "24": "Slave warning",
          "25": "Pre-charge error",
          "26": "Safety contactor error",
          "27": "Over current",
          "28": "Slave update failed",
          "29": "Slave update unavailable",
          "30": "Calibration data lost",
          "31": "Settings invalid",
          "32": "BMS cable",
          "33": "Reference failure",
          "34": "Wrong system voltage",
          "35": "Pre-charge timeout"
        }
      },
      {
        "path": "/Errors/SmartLithium/Communication",
        "type": "float",
        "name": "SmartLithium error flag: Communication"
      },
      {
        "path": "/Errors/SmartLithium/InvalidConfiguration",
        "type": "float",
        "name": "SmartLithium error flag: Invalid configuration"
      },
      {
        "path": "/Errors/SmartLithium/NrOfBatteries",
        "type": "float",
        "name": "SmartLithium error flag: Battery number"
      },
      {
        "path": "/Errors/SmartLithium/Voltage",
        "type": "float",
        "name": "SmartLithium error flag: Voltage"
      },
      {
        "path": "/History/AutomaticSyncs",
        "type": "float",
        "name": "Automatic syncs (count)"
      },
      {
        "path": "/History/AverageDischarge",
        "type": "float",
        "name": "Average discharge (Ah)"
      },
      {
        "path": "/History/ChargeCycles",
        "type": "float",
        "name": "Charge cycles (count)"
      },
      {
        "path": "/History/ChargedEnergy",
        "type": "float",
        "name": "Charged Energy (kWh)"
      },
      {
        "path": "/History/DeepestDischarge",
        "type": "float",
        "name": "Deepest discharge (Ah)"
      },
      {
        "path": "/History/DischargedEnergy",
        "type": "float",
        "name": "Discharged Energy (kWh)"
      },
      {
        "path": "/History/FullDischarges",
        "type": "float",
        "name": "Full discharges (count)"
      },
      {
        "path": "/History/HighFusedVoltageAlarms",
        "type": "float",
        "name": "High fused-voltage alarms (count)"
      },
      {
        "path": "/History/HighStarterVoltageAlarms",
        "type": "float",
        "name": "High starter voltage alarms (count)"
      },
      {
        "path": "/History/HighVoltageAlarms",
        "type": "float",
        "name": "High voltage alarms (count)"
      },
      {
        "path": "/History/LastDischarge",
        "type": "float",
        "name": "Last discharge (Ah)"
      },
      {
        "path": "/History/LowFusedVoltageAlarms",
        "type": "float",
        "name": "Low fused-voltage alarms (count)"
      },
      {
        "path": "/History/LowStarterVoltageAlarms",
        "type": "float",
        "name": "Low starter voltage alarms (count)"
      },
      {
        "path": "/History/LowVoltageAlarms",
        "type": "float",
        "name": "Low voltage alarms (count)"
      },
      {
        "path": "/History/MaximumCellVoltage",
        "type": "float",
        "name": "History; Max cell-voltage (V DC)"
      },
      {
        "path": "/History/MaximumFusedVoltage",
        "type": "float",
        "name": "Maximum fused voltage (V DC)"
      },
      {
        "path": "/History/MaximumStarterVoltage",
        "type": "float",
        "name": "Maximum starter voltage (V DC)"
      },
      {
        "path": "/History/MaximumVoltage",
        "type": "float",
        "name": "Maximum voltage (V DC)"
      },
      {
        "path": "/History/MinimumCellVoltage",
        "type": "float",
        "name": "History; Min cell-voltage (V DC)"
      },
      {
        "path": "/History/MinimumFusedVoltage",
        "type": "float",
        "name": "Minimum fused voltage (V DC)"
      },
      {
        "path": "/History/MinimumStarterVoltage",
        "type": "float",
        "name": "Minimum starter voltage (V DC)"
      },
      {
        "path": "/History/MinimumVoltage",
        "type": "float",
        "name": "Minimum voltage (V DC)"
      },
      {
        "path": "/History/TimeSinceLastFullCharge",
        "type": "float",
        "name": "Time since last full charge (seconds)"
      },
      {
        "path": "/History/TotalAhDrawn",
        "type": "float",
        "name": "Total Ah drawn (Ah)"
      },
      {
        "path": "/Info/BatteryLowVoltage",
        "type": "float",
        "name": "Min discharge voltage (V DC)"
      },
      {
        "path": "/Info/MaxChargeCurrent",
        "type": "float",
        "name": "CCL - Charge Current Limit (A)"
      },
      {
        "path": "/Info/MaxChargeVoltage",
        "type": "float",
        "name": "CVL - Charge Voltage Limit (V)"
      },
      {
        "path": "/Info/MaxDischargeCurrent",
        "type": "float",
        "name": "DCL - Discharge Current Limit (A)"
      },
      {
        "path": "/Io/AllowToCharge",
        "type": "enum",
        "name": "ATC (Allow to Charge)",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      },
      {
        "path": "/Io/AllowToDischarge",
        "type": "enum",
        "name": "ATD (Allow to Discharge)",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      },
      {
        "path": "/Io/ExternalRelay",
        "type": "enum",
        "name": "IO; external relay",
        "enum": {
          "0": "Inactive",
          "1": "Active"
        }
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Mode",
        "enum": {
          "3": "On",
          "252": "Standby"
        },
        "mode": "both"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay status",
        "enum": {
          "0": "Open",
          "1": "Closed"
        }
      },
      {
        "path": "/Soc",
        "type": "float",
        "name": "State of charge (%)"
      },
      {
        "path": "/Soh",
        "type": "float",
        "name": "State of health (%)"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "State",
        "enum": {
          "0": "Initializing (Wait start)",
          "1": "Initializing (before boot)",
          "2": "Initializing (Before boot delay)",
          "3": "Initializing (Wait boot)",
          "4": "Initializing",
          "5": "Initializing (Measure battery voltage)",
          "6": "Initializing (Calculate battery voltage)",
          "7": "Initializing (Wait bus voltage)",
          "8": "Initializing (Wait for lynx shunt)",
          "9": "Running",
          "10": "Error",
          "11": "Unused",
          "12": "Shutdown",
          "13": "Slave updating",
          "14": "Standby",
          "15": "Going to run",
          "16": "Pre-charging",
          "17": "Contactor check"
        }
      },
      {
        "path": "/System/BatteriesParallel",
        "type": "float",
        "name": "System; batteries parallel (count)"
      },
      {
        "path": "/System/BatteriesSeries",
        "type": "float",
        "name": "System; batteries series (count)"
      },
      {
        "path": "/System/MaxVoltageCellId",
        "type": "string",
        "name": "System; ID of module with highest cell voltage"
      },
      {
        "path": "/System/MaxCellTemperature",
        "type": "float",
        "name": "Maximum cell temperature (°C)"
      },
      {
        "path": "/System/MaxCellVoltage",
        "type": "float",
        "name": "System; maximum cell voltage (V DC)"
      },
      {
        "path": "/System/MaxTemperatureCellId",
        "type": "string",
        "name": "System; ID of module with highest cell temperature"
      },
      {
        "path": "/System/MinVoltageCellId",
        "type": "string",
        "name": "System; ID of module with lowest cell voltage"
      },
      {
        "path": "/System/MinCellTemperature",
        "type": "float",
        "name": "Minimum cell temperature (°C)"
      },
      {
        "path": "/System/MinCellVoltage",
        "type": "float",
        "name": "System; minimum cell voltage (V DC)"
      },
      {
        "path": "/System/MinTemperatureCellId",
        "type": "string",
        "name": "System; ID of module with lowest cell temperature"
      },
      {
        "path": "/System/NrOfBatteries",
        "type": "float",
        "name": "System; number of batteries (count)"
      },
      {
        "path": "/System/NrOfCellsPerBattery",
        "type": "float",
        "name": "System; number of cells per battery (count)"
      },
      {
        "path": "/System/NrOfModulesBlockingCharge",
        "type": "integer",
        "name": "Number of modules blocking charge"
      },
      {
        "path": "/System/NrOfModulesBlockingDischarge",
        "type": "integer",
        "name": "Number of modules blocking discharge"
      },
      {
        "path": "/System/NrOfModulesOffline",
        "type": "integer",
        "name": "Number of offline modules"
      },
      {
        "path": "/System/NrOfModulesOnline",
        "type": "integer",
        "name": "Number of online modules"
      },
      {
        "path": "/SystemSwitch",
        "type": "enum",
        "name": "System-switch",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        },
        "remarks": "<p>For monitoring the state of the built-in contactor.</p>"
      },
      {
        "path": "/TimeToGo",
        "type": "float",
        "name": "Time to go (s)"
      }
    ]
  },
  "dcdc": {
    "help": {
      "both": "<p>This node allows for monitoring the state of an Orion XS.</p>",
      "input": "",
      "output": " "
    },
    "dcdc": [
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "/Dc/0/Current (A DC)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "/Dc/0/Temperature (Degrees celsius)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "/Dc/0/Voltage (V DC)"
      },
      {
        "path": "/Dc/In/V",
        "type": "float",
        "name": "/Dc/In/V (V DC)"
      },
      {
        "path": "/Dc/In/P",
        "type": "float",
        "name": "/Dc/In/P (W)"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "/ErrorCode",
        "enum": {
          "0": "No error",
          "1": "Battery temperature too high",
          "2": "Battery voltage too high",
          "3": "Battery temperature sensor miswired (+)",
          "4": "Battery temperature sensor miswired (-)",
          "5": "Battery temperature sensor disconnected",
          "6": "Battery voltage sense miswired (+)",
          "7": "Battery voltage sense miswired (-)",
          "8": "Battery voltage sense disconnected",
          "9": "Battery voltage wire losses too high",
          "17": "Charger temperature too high",
          "18": "Charger over-current",
          "19": "Charger current polarity reversed",
          "20": "Bulk time limit reached",
          "22": "Charger temperature sensor miswired",
          "23": "Charger temperature sensor disconnected",
          "34": "Input current too high"
        }
      },
      {
        "path": "/FirmwareVersion",
        "type": "float",
        "name": "/FirmwareVersion"
      },
      {
        "path": "/History/Cumulative/User/ChargedAh",
        "type": "float",
        "name": "/History/Cumulative/User/ChargedAh (Ah)"
      },
      {
        "path": "/ProductId",
        "type": "float",
        "name": "/ProductId"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "/State",
        "enum": {
          "0": "Off",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize"
        }
      }
    ]
  },
  "dcload": {
    "help": {
      "both": "<p>This node allows for monitoring the state of BMVs configured in Monitor Mode and DC meter type is a load.</p>",
      "input": "",
      "output": ""
    },
    "dcload": [
      {
        "path": "/Alarms/HighStarterVoltage",
        "type": "enum",
        "name": "High starter-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High battery temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowStarterVoltage",
        "type": "enum",
        "name": "Low starter-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low battery temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V)"
      },
      {
        "path": "/Dc/1/Voltage",
        "type": "float",
        "name": "Starter battery voltage (V)"
      },
      {
        "path": "/History/EnergyIn",
        "type": "float",
        "name": "Total energy consumed (kWh)"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay status",
        "enum": {
          "0": "Open",
          "1": "Closed"
        }
      }
    ]
  },
  "dcsource": {
    "help": {
      "both": "<p>This node allows for monitoring the state of Battery Monitor Victron devices (BMV's) configured in Monitor Mode and DC meter type is a source.</p>",
      "input": "",
      "output": ""
    },
    "dcsource": [
      {
        "path": "/Alarms/HighStarterVoltage",
        "type": "enum",
        "name": "High starter-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High battery temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowStarterVoltage",
        "type": "enum",
        "name": "Low starter-voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low battery temperature alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V)"
      },
      {
        "path": "/Dc/1/Voltage",
        "type": "float",
        "name": "Starter battery voltage (V)"
      },
      {
        "path": "/History/EnergyOut",
        "type": "float",
        "name": "Total energy produced (kWh)"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay status",
        "enum": {
          "0": "Open",
          "1": "Closed"
        }
      }
    ]
  },
  "dcsystem": {
    "help": {
      "both": "<p>DC system input node is a DC measurement for loads in your system.</p>",
      "input": "",
      "output": ""
    },
    "dcsystem": [
      {
        "path": "/Alarms/HighStarterVoltage",
        "type": "enum",
        "name": "High auxiliary voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High temperature alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowStarterVoltage",
        "type": "enum",
        "name": "Low auxiliary voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low temperature alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V DC)"
      },
      {
        "path": "/Dc/1/Voltage",
        "type": "float",
        "name": "Auxiliary voltage (V DC)"
      },
      {
        "path": "/History/EnergyIn",
        "type": "float",
        "name": "Total energy consumed (kWh)"
      },
      {
        "path": "/History/EnergyOut",
        "type": "float",
        "name": "Total energy produced (kWh)"
      }
    ]
  },
  "dess": {
    "help": {
      "both": "<p>Dynamic ESS</p>",
      "input": "<p>Dynamic ESS input node.</p>",
      "output": " "
    },
    "system": [
      {
        "path": "/DynamicEss/Available",
        "type": "enum",
        "name": "Is Dynamic ESS available",
        "enum": {
          "0": "System is not capable of doing DynamicEss",
          "1": "System is capable of doing DynamicEss"
        }
      },
      {
        "path": "/DynamicEss/ErrorCode",
        "type": "enum",
        "name": "Error",
        "enum": {
          "0": "No error",
          "1": "No ESS",
          "2": "ESS mode",
          "3": "No matching schedule",
          "4": "SOC low",
          "5": "Battery capacity not configured"
        }
      },
      {
        "path": "/DynamicEss/Restrictions",
        "type": "enum",
        "name": "Active restrictions",
        "enum": {
          "0": "No restrictions between battery and the grid",
          "1": "Grid to battery energy flow is restricted",
          "2": "Battery to grid energy flow is restricted",
          "3": "No energy flow between battery and grid"
        }
      },
      {
        "path": "/DynamicEss/Strategy",
        "type": "enum",
        "name": "Used strategy for current time slot",
        "enum": {
          "0": "Target SOC",
          "1": "Self-consumption",
          "2": "Pro battery",
          "3": "Pro grid"
        }
      },
      {
        "path": "/DynamicEss/TargetSoc",
        "type": "float",
        "name": "The set target SOC for this time slot (%)"
      }
    ],
    "settings": [
      {
        "path": "/Settings/DynamicEss/BatteryCapacity",
        "type": "float",
        "name": "Battery capacity (kWh)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/BatteryChargeLimit",
        "type": "float",
        "name": "Battery charge limit (kW)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/BatteryDishargeLimit",
        "type": "float",
        "name": "Battery discharge limit (kW)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/GridExportLimit",
        "type": "float",
        "name": "Grid export limit (kW)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/GridImportLimit",
        "type": "float",
        "name": "Grid import limit (kW)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Mode",
        "type": "enum",
        "name": "Dynamic ESS mode",
        "enum": {
          "0": "Off",
          "1": "Auto",
          "4": "Node-RED"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/OperatingMode",
        "type": "enum",
        "name": "Dynamic ESS mode",
        "enum": {
          "0": "Trade mode",
          "1": "Green mode"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Restrictions",
        "type": "enum",
        "name": "Dynamic ESS restrictions",
        "enum": {
          "0": "None",
          "1": "Battery to grid",
          "2": "Grid to battery"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Schedule/{index}/AllowGridFeedIn",
        "type": "enum",
        "name": "Allow grid feed-in during schedule {index}",
        "enum": {
          "0": "Not allowed",
          "1": "Allowed"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Schedule/{index}/Duration",
        "type": "float",
        "name": "Duration for schedule {index} (Seconds)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Schedule/{index}/Restrictions",
        "type": "enum",
        "name": "Active restrictions for schedule {index}",
        "enum": {
          "0": "No restrictions between battery and the grid",
          "1": "Grid to battery energy flow is restricted",
          "2": "Battery to grid energy flow is restricted",
          "3": "No energy flow between battery and grid"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Schedule/{index}/Soc",
        "type": "float",
        "name": "Target SOC for schedule {index} (%)",
        "mode": "both"
      },
      {
        "path": "/Settings/DynamicEss/Schedule/{index}/Strategy",
        "type": "enum",
        "name": "Used strategy for schedule {index}",
        "enum": {
          "0": "Target SOC",
          "1": "Self-consumption",
          "2": "Pro battery",
          "3": "Pro grid"
        },
        "mode": "both"
      }
    ]
  },
  "digitalinput": {
    "help": {
      "both": "<p>With this node it is possible to read the digital inputs from the Venus device. The node only shows the enabled digital inputs, so first make sure to enable the input from the Venus OS GUI (<i>Settings -> I/O -> digital inputs</i>) for the desired readout.</p><p>Depending on the selected type of input, different measurements become available.</p><p>Also see the section on <a href=\"https://www.victronenergy.com/media/pg/Cerbo_GX/en/digital-inputs.html\">digital inputs</a> in the Cerbo GX manual.</p>",
      "input": "",
      "output": ""

    },
    "pulsemeter": [
      {
        "path": "/Aggregate",
        "type": "float",
        "name": "Pulse meter aggregate"
      },
      {
        "path": "/Count",
        "type": "float",
        "name": "Pulse meter count"
      }
    ],
    "digitalinput": [
      {
        "path": "/Alarm",
        "type": "enum",
        "name": "Digital input alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Count",
        "type": "float",
        "name": "Digital input count"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "Digital input state",
        "enum": {
          "0": "low",
          "1": "high",
          "2": "off",
          "3": "on",
          "4": "no",
          "5": "yes",
          "6": "open",
          "7": "closed",
          "8": "ok",
          "9": "alarm",
          "10": "running",
          "11": "stopped"
        }
      },
      {
        "path": "/Type",
        "type": "enum",
        "name": "Digital input type",
        "enum": {
          "0": "Disabled",
          "1": "Pulse meter",
          "2": "Door sensor",
          "3": "Bilge pump",
          "4": "Bilge alarm",
          "5": "Burglar alarm",
          "6": "Smoke alarm",
          "7": "Fire alarm",
          "8": "CO2 alarm",
          "9": "Generator",
          "10": "Generic input"
        }
      }
    ]
  },
  "ess": {
    "help": {
      "both": "<p>This node gives information on the energy storage system (ESS).</p>",
      "input": "",
      "output": " "
    },
    "battery": [
      {
        "path": "/System/MaxCellTemperature",
        "type": "integer",
        "name": "Maximum battery cell temperature"
      },
      {
        "path": "/System/MaxCellVoltage",
        "type": "integer",
        "name": "Maximum battery cell voltage"
      },
      {
        "path": "/System/MinCellTemperature",
        "type": "integer",
        "name": "Minimum battery cell temperature"
      },
      {
        "path": "/System/MinCellVoltage",
        "type": "integer",
        "name": "Minimum battery cell voltage"
      },
      {
        "path": "/System/NrOfModulesBlockingCharge",
        "type": "integer",
        "name": "Number of modules blocking charge"
      },
      {
        "path": "/System/NrOfModulesBlockingDischarge",
        "type": "integer",
        "name": "Number of modules blocking discharge"
      },
      {
        "path": "/System/NrOfModulesOffline",
        "type": "integer",
        "name": "Number of offline modules"
      },
      {
        "path": "/System/NrOfModulesOnline",
        "type": "integer",
        "name": "Number of online modules"
      }
    ],
    "vebus": [
      {
        "path": "/Hub4/DisableCharge",
        "type": "enum",
        "name": "Disable charge",
        "enum": {
          "0": "No",
          "1": "Yes"
        },
       "mode": "both"
      },
      {
        "path": "/Hub4/DisableFeedIn",
        "type": "enum",
        "name": "Disable feed-in",
        "enum": {
          "0": "No",
          "1": "Yes"
        },
       "mode": "both"
      },
      {
        "path": "/Hub4/DoNotFeedInOvervoltage",
        "type": "enum",
        "name": "Feed in overvoltage",
        "enum": {
          "0": "Yes",
          "1": "No"
        },
       "mode": "both"
      },
      {
        "path": "/Hub4/{line}}/AcPowerSetpoint",
        "type": "integer",
        "name": "AC Power {line} setpoint (W)",
       "mode": "both"
      },
      {
        "path": "/Hub4/{line}}/MaxFeedInPower",
        "type": "integer",
        "name": "Maximum overvoltage feed-in power {line}} (W)",
       "mode": "both"
      },
      {
        "path": "/PvInverter/Disable",
        "type": "enum",
        "name": "Disable PV inverter",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      },
      {
        "path": "/SystemReset",
        "type": "enum",
        "name": "VE.Bus system restart",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      }
    ],
    "settings": [
      {
        "path": "/Settings/CGwacs/AcPowerSetPoint",
        "type": "integer",
        "name": "Grid set-point (W)",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
        "type": "integer",
        "name": "Minimum Discharge SOC (%)",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/Schedule/Charge/{schedule}/AllowDischarge",
        "type": "enum",
        "name": "Schedule {schedule}: Self-consumption above limit",
        "enum": {
          "0": "Yes",
          "1": "No"
        },
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/Schedule/Charge/{schedule}/Day",
        "type": "enum",
        "name": "Schedule {schedule}: Day",
        "enum": {
          "-1": "Disabled",
          "0": "Sunday",
          "1": "Monday",
          "2": "Tuesday",
          "3": "Wednesday",
          "4": "Thursday",
          "5": "Friday",
          "6": "Saturday",
          "7": "Every day",
          "8": "Weekdays",
          "9": "Weekends",
          "11": "Monthly"
        },
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/Schedule/Charge/{schedule}/Duration",
        "type": "integer",
        "name": "Schedule {schedule}: Duration (seconds)",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/Schedule/Charge/{schedule}/Soc",
        "type": "integer",
        "name": "Schedule {schedule}: State of charge (%)",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/Schedule/Charge/{schedule}/Start",
        "type": "integer",
        "name": "Schedule {schedule}: Start (seconds after midnight)",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/State",
        "type": "enum",
        "name": "ESS state",
        "enum": {
          "1": "BatteryLife enabled (GUI controlled)",
          "2": "Optimized Mode /w BatteryLife: self consumption",
          "3": "Optimized Mode /w BatteryLife: self consumption, SoC exceeds 85%",
          "4": "Optimized Mode /w BatteryLife: self consumption, SoC at 100%",
          "5": "Optimized Mode /w BatteryLife: SoC below dynamic SoC limit",
          "6": "Optimized Mode /w BatteryLife: SoC has been below SoC limit for more than 24 hours. Charging the battery (5A)",
          "7": "Optimized Mode /w BatteryLife: Inverter/Charger is in sustain mode",
          "8": "Optimized Mode /w BatteryLife: recharging, SoC dropped by 5% or more below the minimum SoC",
          "9": "'Keep batteries charged' mode is enabled",
          "10": "Optimized mode w/o BatteryLife: self consumption, SoC at or above minimum SoC",
          "11": "Optimized mode w/o BatteryLife: self consumption, SoC is below minimum SoC",
          "12": "Optimized mode w/o BatteryLife: recharging, SoC dropped by 5% or more below minimum SoC"
        }
      },
      {
        "path": "/Settings/CGwacs/Hub4Mode",
        "type": "enum",
        "name": "ESS mode",
        "enum": {
          "1": "Optimized mode or 'keep batteries charged' and phase compensation enabled",
          "2": "Optimized mode or 'keep batteries charged' and phase compensation disabled",
          "3": "External control"
        },
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/MaxChargePower",
        "type": "integer",
        "name": "Max charge power (W)",
        "remarks": "<p>Not used with DVCC.</p>",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/MaxDischargePower",
        "type": "integer",
        "name": "Max inverter power (W)",
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/MaxFeedInPower",
        "type": "integer",
        "name": "Maximum System Grid Feed In (W)",
        "remarks": "<ul><li>-1: No limit</li><li> &gt;=0: limited system feed-in</li></ul><p>Applies to DC-coupled and AC-coupled feed-in.</p>",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/OvervoltageFeedIn",
        "type": "enum",
        "name": "Feed excess DC-coupled PV into grid",
        "enum": {
          "0": "Don’t feed excess DC-tied PV into grid",
          "1": "Feed excess DC-tied PV into the grid"
        },
       "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/PreventFeedback",
        "type": "enum",
        "name": "Don’t feed excess AC-coupled PV into grid",
        "enum": {
          "0": "Feed excess AC-tied PV into grid",
          "1": "Don’t feed excess AC-tied PV into the grid"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/RunWithoutGridMeter",
        "type": "enum",
        "name": "Grid metering",
        "enum": {
          "0": "External meter",
          "1": "Inverter/Charger"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/SystemSetup/MaxChargeCurrent",
        "type": "float",
        "name": "DVCC Charge current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Settings/SystemSetup/MaxChargeVoltage",
        "type": "float",
        "name": "DVCC Maximum charge voltage (V)",
        "mode": "both"
      }
    ],
    "system": [
      {
        "path": "/Control/ActiveSocLimit",
        "type": "integer",
        "name": "Active SOC limit (%)"
      }
    ]
  },
  "evcharger": {
    "help": {
       "both": "<p>The EV charger input node is for reading from the EV Charging Station.</p><p>Also see <a href=\"https://github.com/victronenergy/venus/wiki/dbus#evcharger\">here</a> for more information.</p>",
       "input": "",
       "output": " "
    },
    "evcharger": [
      {
        "path": "/Ac/Energy/Forward",
        "type": "float",
        "name": "Energy consumed by charger (kWh)"
      },
      {
        "path": "/Ac/{phase}/Power",
        "type": "float",
        "name": "{phase} Power (W)"
      },
      {
        "path": "/Ac/Power",
        "type": "float",
        "name": "Total power (W)"
      },
      {
        "path": "/ChargingTime",
        "type": "float",
        "name": "Charging time (seconds)"
      },
      {
        "path": "/Current",
        "type": "float",
        "name": "Charge current (A)"
      },
      {
        "path": "/EnableDisplay",
        "type": "enum",
        "name": "Display",
        "enum": {
          "0": "Locked",
          "1": "Unlocked"
        },
        "mode": "both"
      },
      {
        "path": "/FirmwareVersion",
        "type": "float",
        "name": "Firmware version"
      },
      {
        "path": "/MaxCurrent",
        "type": "float",
        "name": "Maximum charge current (A)",
        "mode": "both"
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Mode",
        "enum": {
          "0": "Manual",
          "1": "Auto",
          "2": "Schedule"
        },
        "mode": "both"
      },
      {
        "path": "/Model",
        "type": "float",
        "name": "Model"
      },
      {
        "path": "/Position",
        "type": "enum",
        "name": "Position",
        "enum": {
          "0": "AC input 1",
          "1": "AC output",
          "2": "AC input 2"
        },
        "mode": "both"
      },
      {
        "path": "/ProductId",
        "type": "float",
        "name": "Product ID"
      },
      {
        "path": "/Serial",
        "type": "string",
        "name": "Serial"
      },
      {
        "path": "/SetCurrent",
        "type": "float",
        "name": "Set charge current (manual mode) (A)",
        "mode": "both"
      },
      {
        "path": "/StartStop",
        "type": "enum",
        "name": "Start/stop charging (manual mode)",
        "enum": {
          "0": "Stop",
          "1": "Start"
        },
        "mode": "both"
      },
      {
        "path": "/Status",
        "type": "enum",
        "name": "Status",
        "enum": {
          "0": "Disconnected",
          "1": "Connected",
          "2": "Charging",
          "3": "Charged",
          "4": "Waiting for sun",
          "5": "Waiting for RFID",
          "6": "Waiting for start",
          "7": "Low SOC",
          "8": "Ground test error",
          "9": "Welded contacts test error",
          "10": "CP input test error (shorted)",
          "11": "Residual current detected",
          "12": "Undervoltage detected",
          "13": "Overvoltage detected",
          "14": "Overheating detected",
          "15": "Reserved",
          "16": "Reserved",
          "17": "Reserved",
          "18": "Reserved",
          "19": "Reserved",
          "20": "Charging limit",
          "21": "Start charging",
          "22": "Switching to 3 phase",
          "23": "Switching to 1 phase",
          "24": "Stop charging"
        }
      }
    ]
  },
  "fuelcell": {
    "help": {
      "both": "<p>See <a href=\"https://github.com/victronenergy/venus/wiki/dbus#fuelcell\">https://github.com/victronenergy/venus/wiki/dbus#fuelcell</a> for more information.</p>",
      "input": "",
      "output": ""
    },
    "fuelcell": [
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighStarterVoltage",
        "type": "enum",
        "name": "High auxiliary voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High temperature alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowStarterVoltage",
        "type": "enum",
        "name": "Low auxiliary voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low temperature alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low voltage alarm",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V DC)"
      },
      {
        "path": "/Dc/1/Voltage",
        "type": "float",
        "name": "Auxiliary voltage (V DC)"
      },
      {
        "path": "/History/EnergyOut",
        "type": "float",
        "name": "Total energy produced (kWh)"
      }
    ]
  },
  "generator": {
    "help": {
      "both": "<p>Generator input node for relay controlled and Fischer Panda generators.<br />In order to use the relay for controlling a generator, make sure to set the relay to <i>Generator</i> via the (remote) console first.<br />The <strong>Generator start/stop<strong> dropdown is for the generic generator. It can activate a relay, but also, in case of Fischer panda, a generator directly via D-Bus.<br />The other option(s) are for generator data like voltages, RPM, oil pressure etcetera.<br />Also see <a href=\"https://github.com/victronenergy/venus/wiki/dbus#generator-data\">here</a> for more information.</p>",
      "input": "",
      "output": " "
    },
    "generator": [
      {
        "path": "/Alarms/NoGeneratorAtAcIn",
        "type": "enum",
        "name": "Generator not detected at AC input alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/AutoStartEnabled",
        "type": "enum",
        "name": "Auto start enabled/disabled",
        "enum": {
          "0": "Autostart disabled",
          "1": "Autostart enabled"
        },
       "mode": "both"
      },
      {
        "path": "/Error",
        "type": "enum",
        "name": "Generator remote error",
        "enum": {
          "0": "No Error",
          "1": "Remote disabled",
          "2": "Remote fault"
        }
      },
      {
        "path": "/ManualStart",
        "type": "enum",
        "name": "Manual Start",
        "enum": {
          "0": "Stop generator",
          "1": "Start generator"
        },
       "mode": "both"
      },
      {
        "path": "/ManualStartTimer",
        "type": "float",
        "name": "Set it before a manual start to make the generator run for a fixed amount of seconds. Once the generator is started it indicates the seconds left until the generator is stopped",
        "mode": "both"
      },
      {
        "path": "/QuietHours",
        "type": "enum",
        "name": "Quiet hours active",
        "enum": {
          "0": "Quiet hours inactive",
          "1": "Quiet hours active"
        }
      },
      {
        "path": "/RunningByConditionCode",
        "type": "enum",
        "name": "Condition that started the generator",
        "enum": {
          "0": "Stopped",
          "1": "Manual",
          "2": "TestRun",
          "3": "LossOfComms",
          "4": "Soc",
          "5": "AcLoad",
          "6": "BatteryCurrent",
          "7": "BatteryVoltage",
          "8": "InverterTemperature",
          "9": "InverterOverload",
          "10": "StopOnAc1"
        }
      },
      {
        "path": "/Runtime",
        "type": "float",
        "name": "Runtime in seconds (seconds)"
      },
      {
        "path": "/ServiceCounter",
        "type": "float",
        "name": "Service countdown counter (seconds until next generator service)"
      },
      {
        "path": "/ServiceCounterReset",
        "type": "integer",
        "name": "Service countdown reset (1=Reset service counter)",
        "mode": "output"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "Generator start/stop state",
        "enum": {
          "0": "Stopped",
          "1": "Running",
          "2": "Warm-up",
          "3": "Cool-down",
          "4": "Stopping",
          "10": "Error"
        }
      },
      {
        "path": "/TestRunIntervalRuntime",
        "type": "float",
        "name": "Run time since last test run (seconds)"
      },
      {
        "path": "/TodayRunTime",
        "type": "float",
        "name": "Today's run time (seconds)"
      }
    ],
    "genset": [
      {
        "path": "/Ac/Frequency",
        "type": "float",
        "name": "AC Frequency (Hz)"
      },
      {
        "path": "/Ac/PowerFactor",
        "type": "float",
        "name": "Power Factor"
      },
      {
        "path": "/Ac/{phase}/Current",
        "type": "float",
        "name": "Phase {phase} current (A AC)"
      },
      {
        "path": "/Ac/{phase}/Frequency",
        "type": "float",
        "name": "Phase {phase} frequency (Hz)"
      },
      {
        "path": "/Ac/{phase}/Power",
        "type": "float",
        "name": "Phase {phase} power (W)"
      },
      {
        "path": "/Ac/{phase}/PowerFactor",
        "type": "float",
        "name": "{phase} Power Factor"
      },
      {
        "path": "/Ac/{phase}/Voltage",
        "type": "float",
        "name": "Phase {phase} voltage (V AC)"
      },
      {
        "path": "/NrOfPhases",
        "type": "float",
        "name": "The number of phases (1, 2 or 3)"
      },
      {
        "path": "/RemoteStartModeEnabled",
        "type": "enum",
        "name": "Remote start mode",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "DC output 1 - Current (A)"
      },
      {
        "path": "/Dc/0/Power",
        "type": "float",
        "name": "DC output 1 - Power (W)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "DC output 1 - Voltage (V)"
      },
      {
        "path": "/Engine/CoolantTemperature",
        "type": "float",
        "name": "Engine coolant temperature (°C)"
      },
      {
        "path": "/Engine/ExaustTemperature",
        "type": "float",
        "name": "Engine exhaust temperature (°C)"
      },
      {
        "path": "/Engine/OilTemperature",
        "type": "float",
        "name": "Oil temperature (°C)"
      },
      {
        "path": "/Engine/Load",
        "type": "float",
        "name": "Engine load (%)"
      },
      {
        "path": "/Engine/OilPressure",
        "type": "float",
        "name": "Oil pressure (kPa)"
      },
      {
        "path": "/Engine/OperatingHours",
        "type": "float",
        "name": "Engine operating hours (s)"
      },
      {
        "path": "/Engine/Speed",
        "type": "float",
        "name": "Engine speed (RPM)"
      },
      {
        "path": "/Engine/Starts",
        "type": "float",
        "name": "Nr of starts (absolute count)"
      },
      {
        "path": "/Engine/WindingTemperature",
        "type": "float",
        "name": "Engine winding temperature (°C)"
      },
      {
        "path": "/Error/{index}/Id",
        "type": "string",
        "name": "Generator specific error code {index}"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Error",
        "enum": {
          "0": "No error",
          "1": "AC voltage L1 too low",
          "2": "AC frequency L1 too low",
          "3": "AC current too low",
          "4": "AC power too low",
          "5": "Emergency stop",
          "6": "Servo current too low",
          "7": "Oil pressure too low",
          "8": "Engine temperature too low",
          "9": "Winding temperature too low",
          "10": "Exhaust temperature too low",
          "13": "Starter current too low",
          "14": "Glow current too low",
          "15": "Glow current too low",
          "16": "Fuel holding magnet current too low",
          "17": "Stop solenoid hold coil current too low",
          "18": "Stop solenoid pull coil current too low",
          "19": "Optional DC out current too low",
          "20": "5V output voltage too low",
          "21": "Boost output current too low",
          "22": "Panel supply current too high",
          "25": "Starter battery voltage too low",
          "26": "Startup aborted (rotation too low)",
          "28": "Rotation too low",
          "29": "Power contactor current too low",
          "30": "AC voltage L2 too low",
          "31": "AC frequency L2 too low",
          "32": "AC current L2 too low",
          "33": "AC power L2 too low",
          "34": "AC voltage L3 too low",
          "35": "AC frequency L3 too low",
          "36": "AC current L3 too low",
          "37": "AC power L3 too low",
          "62": "Fuel temperature too low",
          "63": "Fuel level too low",
          "65": "AC voltage L1 too high",
          "66": "AC frequency too high",
          "67": "AC current too high",
          "68": "AC power too high",
          "70": "Servo current too high",
          "71": "Oil pressure too high",
          "72": "Engine temperature too high",
          "73": "Winding temperature too high",
          "74": "Exhaust temperature too low",
          "77": "Starter current too low",
          "78": "Glow current too high",
          "79": "Glow current too high",
          "80": "Fuel holding magnet current too high",
          "81": "Stop solenoid hold coil current too high",
          "82": "Stop solenoid pull coil current too high",
          "83": "Optional DC out current too high",
          "84": "5V output voltage too high",
          "85": "Boost output current too high",
          "89": "Starter battery voltage too high",
          "90": "Startup aborted (rotation too high)",
          "92": "Rotation too high",
          "93": "Power contactor current too high",
          "94": "AC voltage L2 too high",
          "95": "AC frequency L2 too high",
          "96": "AC current L2 too high",
          "97": "AC power L2 too high",
          "98": "AC voltage L3 too high",
          "99": "AC frequency L3 too high",
          "100": "AC current L3 too high",
          "101": "AC power L3 too high",
          "126": "Fuel temperature too high",
          "127": "Fuel level too high",
          "130": "Lost control unit",
          "131": "Lost panel",
          "132": "Service needed",
          "133": "Lost 3-phase module",
          "134": "Lost AGT module",
          "135": "Synchronization failure",
          "137": "Intake airfilter",
          "139": "Lost sync. module",
          "140": "Load-balance failed",
          "141": "Sync-mode deactivated",
          "142": "Engine controller",
          "148": "Rotating field wrong",
          "149": "Fuel level sensor lost",
          "150": "Init failed",
          "151": "Watchdog",
          "152": "Out: winding",
          "153": "Out: exhaust",
          "154": "Out: Cyl. head",
          "155": "Inverter over temperature",
          "156": "Inverter overload",
          "157": "Inverter communication lost",
          "158": "Inverter sync failed",
          "159": "CAN communication lost",
          "160": "L1 overload",
          "161": "L2 overload",
          "162": "L3 overload",
          "163": "DC overload",
          "164": "DC overvoltage",
          "165": "Emergency stop",
          "166": "No connection"
        }
      },
      {
        "path": "/HeatsinkTemperature",
        "type": "float",
        "name": "Heatsink temperature (°C)"
      },
      {
        "path": "/ProductId",
        "type": "float",
        "name": "Generator model"
      },
      {
        "path": "/Start",
        "type": "enum",
        "name": "Start generator",
        "enum": {
          "0": "Stop",
          "1": "Start"
        },
        "mode": "both"
      },
      {
        "path": "/StarterVoltage",
        "type": "float",
        "name": "Starter voltage (V DC)"
      },
      {
        "path": "/StatusCode",
        "type": "enum",
        "name": "Status",
        "enum": {
          "0": "Standby",
          "1": "Startup 1",
          "2": "Startup 2",
          "3": "Startup 3",
          "4": "Startup 4",
          "5": "Startup 5",
          "6": "Startup 6",
          "7": "Startup 7",
          "8": "Running",
          "9": "Stopping",
          "10": "Error"
        }
      }
    ],
    "dcgenset": [
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "DC current (DC A)"
      },
      {
        "path": "/Engine/CoolantTemperature",
        "type": "float",
        "name": "Engine coolant temperature (Degrees celsius)"
      },
      {
        "path": "/Engine/ExaustTemperature",
        "type": "float",
        "name": "Engine exhaust temperature (Degrees celsius)"
      },
      {
        "path": "/Engine/Load",
        "type": "float",
        "name": "Engine load (%)"
      },
      {
        "path": "/Engine/OilPressure",
        "type": "float",
        "name": "Oil pressure (kPa)"
      },
      {
        "path": "/Engine/OilTemperature",
        "type": "float",
        "name": "Engine oil temperature (Degrees celsius)"
      },
      {
        "path": "/Engine/OperatingHours",
        "type": "float",
        "name": "Engine oil temperature (Seconds)"
      },
      {
        "path": "/Engine/Speed",
        "type": "float",
        "name": "Heatsink temperature (RPM)"
      },
      {
        "path": "/Engine/WindingTemperature",
        "type": "float",
        "name": "Internal winding temperature (Degrees celsius)"
      },
      {
        "path": "/Error/{index}/Id",
        "type": "string",
        "name": "Generator specific error code {index}"
      },
      {
        "path": "/HeatsinkTemperature",
        "type": "float",
        "name": "Heatsink temperature (Degrees celsius)"
      },
      {
        "path": "/Start",
        "type": "enum",
        "name": "Start generator",
        "enum": {
          "0": "Stop generator",
          "1": "Start generator"
        },
        "mode": "both"
      },
      {
        "path": "/StarterVoltage",
        "type": "float",
        "name": "Starter battery voltage (DC V)"
      }
    ]
  },
  "gps": {
    "help": {
       "both": "<p>GPS information can be obtained with this node. For an example usage see the <a href=\"https://github.com/victronenergy/node-red-contrib-victron/wiki/Example-Flows#location-based-scheduling\">location based scheduling</a> example.</p>",
       "input": "",
       "output": ""
    },
    "gps": [
      {
        "path": "/Altitude",
        "type": "float",
        "name": "Altitude (m)"
      },
      {
        "path": "/Course",
        "type": "float",
        "name": "Course (Deg)"
      },
      {
        "path": "/Fix",
        "type": "integer",
        "name": "Fix"
      },
      {
        "path": "/NrOfSatellites",
        "type": "integer",
        "name": "Number of satellites"
      },
      {
        "path": "/Position/Latitude",
        "type": "float",
        "name": "Latitude (LAT)"
      },
      {
        "path": "/Position/Longitude",
        "type": "float",
        "name": "Longitude (LNG)"
      },
      {
        "path": "/Speed",
        "type": "float",
        "name": "Speed (m/s)"
      }
    ]
  },
  "gridmeter": {
    "help": {
      "both": "<p>This node gives allows for monitoring the grid. See also <a href=\"https://www.victronenergy.com/accessories/energy-meter\">energy meters</a> accessories.</p>",
      "input": "",
      "output": ""
    },
    "grid": [
      {
        "path": "/Ac/Frequency",
        "type": "float",
        "name": "Frequency (Hz)"
      },
      {
        "path": "/Ac/PowerFactor",
        "type": "float",
        "name": "Power Factor"
      },
      {
        "path": "/Ac/Energy/Forward",
        "type": "float",
        "name": "Total Forward Energy (bought) (kWh)"
      },
      {
        "path": "/Ac/Energy/Reverse",
        "type": "float",
        "name": "Total Reverse Energy (sold) (kWh)"
      },
      {
        "path": "/Ac/{line}/Current",
        "type": "float",
        "name": "{line} Current (A)"
      },
      {
        "path": "/Ac/{line}/Energy/Forward",
        "type": "float",
        "name": "{line} Forward energy (bought) (kWh)"
      },
      {
        "path": "/Ac/{line}/Energy/Reverse",
        "type": "float",
        "name": "{line} Reverse energy (sold) (kWh)"
      },
      {
        "path": "/Ac/{line}/Power",
        "type": "float",
        "name": "{line} Power (W)"
      },
      {
        "path": "/Ac/{line}/PowerFactor",
        "type": "float",
        "name": "{line} Power Factor"
      },
      {
        "path": "/Ac/{line}/Voltage",
        "type": "float",
        "name": "{line} Voltage (V)"
      },
      {
        "path": "/Ac/Power",
        "type": "float",
        "name": "Power (W)"
      },
      {
        "path": "/Serial",
        "type": "string",
        "name": "Serial"
      }
    ]
  },
  "inverter": {
    "help": {
       "both": "<p>This node is for reading from an inverter.</p>",
      "input": "",
      "output": " "
    },
    "inverter": [
      {
        "path": "/Ac/Out/L1/I",
        "type": "float",
        "name": "Output current (A)"
      },
      {
        "path": "/Ac/Out/L1/P",
        "type": "float",
        "name": "Output power (W AC)"
      },
      {
        "path": "/Ac/Out/L1/V",
        "type": "float",
        "name": "Output voltage (V)"
      },
      {
        "path": "/Alarms/HighTemperature",
        "type": "enum",
        "name": "High temperature alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltage",
        "type": "enum",
        "name": "High battery voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/HighVoltageAcOut",
        "type": "enum",
        "name": "High AC-Out voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowSoc",
        "type": "enum",
        "name": "Low SOC alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowTemperature",
        "type": "enum",
        "name": "Low temperature alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltage",
        "type": "enum",
        "name": "Low battery voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/LowVoltageAcOut",
        "type": "enum",
        "name": "Low AC-Out voltage alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/Overload",
        "type": "enum",
        "name": "Overload alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/Ripple",
        "type": "enum",
        "name": "Ripple alarm",
        "enum": {
          "0": "No alarm",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A DC)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Input voltage (V)"
      },
      {
        "path": "/Energy/InverterToAcOut",
        "type": "float",
        "name": "Energy from battery to AC-out (kWh)"
      },
      {
        "path": "/Energy/OutToInverter",
        "type": "float",
        "name": "Energy from AC-out to battery (kWh)"
      },
      {
        "path": "/Energy/SolarToAcOut",
        "type": "float",
        "name": "Energy from solar to AC-out (kWh)"
      },
      {
        "path": "/Energy/SolarToBattery",
        "type": "float",
        "name": "Energy from solar to battery (kWh)"
      },
      {
        "path": "/FirmwareVersion",
        "type": "float",
        "name": "Firmware version"
      },
      {
        "path": "/History/Daily/0/Pv/{tracker}/MaxPower",
        "type": "float",
        "name": "Maximum power for today on tracker {tracker} (W)"
      },
      {
        "path": "/History/Daily/0/Pv/{tracker}/Yield",
        "type": "float",
        "name": "Yield today for today on tracker {tracker} (kWh)"
      },
      {
        "path": "/History/Daily/1/Pv/{tracker}/MaxPower",
        "type": "float",
        "name": "Maximum power for yesterday on tracker {tracker} (W)"
      },
      {
        "path": "/History/Daily/1/Pv/{tracker}/Yield",
        "type": "float",
        "name": "Yield today for yesterday on tracker {tracker} (kWh)"
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Mode",
        "enum": {
          "1": "Charger only",
          "2": "Inverter only",
          "3": "On",
          "4": "Off",
          "5": "Low Power/Eco",
          "251": "Passthrough",
          "252": "Standby",
          "253": "Hibernate"
        },
        "mode": "both"
      },
      {
        "path": "/ProductId",
        "type": "float",
        "name": "Inverter model"
      },
      {
        "path": "/Pv/{tracker}/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker {tracker}",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/{tracker}/P",
        "type": "float",
        "name": "PV power for tracker {tracker| (W)"
      },
      {
        "path": "/Pv/{tracker}/V",
        "type": "float",
        "name": "PV voltage for tracker {tracker} (V DC)"
      },
      {
        "path": "/Pv/1/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker 2",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/V",
        "type": "float",
        "name": "PV voltage (for single tracker units) (V DC)"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay state",
        "enum": {
          "0": "Open",
          "1": "Closed"
        }
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "State",
        "enum": {
          "0": "Off",
          "1": "Low Power",
          "2": "Fault",
          "9": "Inverting"
        }
      }
    ]
  },
  "switch": {
    "help": {
      "both": "<p>The <b>switch</b> node can be used for the usb-connected I/O extender.</p>",
      "input": "",
      "output": " "
    },
    "switch": [
      {
        "path": "/SwitchableOutput/{type}/State",
        "type": "enum",
        "enum": {
          "0": "Off",
          "1": "On"
        },
        "name": "{type} state",
        "mode": "both"
      },
      {
        "path": "/SwitchableOutput/{type}/Dimming",
        "type": "integer",
        "name": "{type} dimming",
        "mode": "both"
      }
    ]
  },
  "meteo": {
    "help": {
       "both": "<p>The <b>meteo</b> node allows for Solar Irradiance, Temperature and Wind Speed Sensors measuring.</p><p>More information and supported devices can be found in the <a href=\"https://www.victronenergy.com/media/pg/Cerbo_GX/en/installation.html#UUID-d4b7dfe9-4ee0-53bc-8959-c567ed63cebb\">manual</a>.</p>",
      "input": "",
      "output": ""
    },
    "meteo": [
      {
        "path": "/BatteryVoltage",
        "type": "float",
        "name": "SBattery voltage (V)"
      },
      {
        "path": "/CellTemperature",
        "type": "float",
        "name": "Sensor cell temperature (°C)"
      },
      {
        "path": "/ExternalTemperature",
        "type": "float",
        "name": "External temperature (°C)"
      },
      {
        "path": "/ExternalTemperature2",
        "type": "float",
        "name": "External temperature – second sensor (Degrees celsius)"
      },
      {
        "path": "/InstallationPower",
        "type": "float",
        "name": "Installation power (W)"
      },
      {
        "path": "/Irradiance",
        "type": "float",
        "name": "Solar Irradiance (W/m^2)"
      },
      {
        "path": "/TimeSinceLastSun",
        "type": "integer",
        "name": "Minutes since sunset"
      },
      {
        "path": "/TodaysYield",
        "type": "float",
        "name": "Todays yield (kWh)"
      },
      {
        "path": "/WindSpeed",
        "type": "float",
        "name": "Wind speed (m/s)"
      },
      {
        "path": "/WindDirection",
        "type": "integer",
        "name": "Wind direction (°)"
      }
    ]
  },
  "motordrive": {
    "help": { 
      "both": "<p>This is the motordrive node. See <a href=\"https://bitbucket.org/oceanvolt/dbus_motordrive/src\">https://bitbucket.org/oceanvolt/dbus_motordrive/src</a> for more information.</p>",
      "input": "",
      "output": ""
    },
    "motordrive": [
      {
        "path": "/Controller/Temperature",
        "type": "float",
        "name": "Controller Temperature (°C)"
      },
      {
        "path": "/Motor/RPM",
        "type": "float",
        "name": "Motor RPM (RPM)"
      },
      {
        "path": "/Motor/Temperature",
        "type": "float",
        "name": "Motor temperature (°C)"
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Controller DC Current (A DC)"
      },
      {
        "path": "/Dc/0/Power",
        "type": "float",
        "name": "Controller DC Power (W)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Controller DC Voltage (V DC)"
      }
    ]
  },
  "multi": {
    "help": {
       "both": "<p>This is the Multi RS node.</p>",
       "input": "",
       "output": " "
    },
    "multi": [
      {
        "path": "/Ac/ActiveIn/ActiveInput",
        "type": "enum",
        "name": "Active AC input",
        "enum": {
          "0": "AC Input 1",
          "1": "AC Input 2",
          "240": "Disconnected"
        }
      },
      {
        "path": "/Ac/In/{index}/CurrentLimit",
        "type": "float",
        "name": "Ac input {index} current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Ac/In/{index}/{phase}/F",
        "type": "float",
        "name": "Input {index} frequency phase {phase} (Hz)"
      },
      {
        "path": "/Ac/In/{index}/{phase}/I",
        "type": "float",
        "name": "Input {index} current phase {phase} (A AC)"
      },
      {
        "path": "/Ac/In/{index}/{phase}/P",
        "type": "float",
        "name": "Input {index} power phase {phase} (W)"
      },
      {
        "path": "/Ac/In/{index}/{phase}/V",
        "type": "float",
        "name": "Input {index} voltage phase {phase} (V AC)"
      },
      {
        "path": "/Ac/In/{index}/Type",
        "type": "enum",
        "name": "AC input {index} source type",
        "enum": {
          "0": "Unused",
          "1": "Grid",
          "2": "Genset",
          "3": "Shore"
        }
      },
      {
        "path": "/Ac/NumberOfPhases",
        "type": "float",
        "name": "Phase count (count)"
      },
      {
        "path": "/Ac/Out/{phase}/F",
        "type": "float",
        "name": "Output frequency phase {phase} (Hz)"
      },
      {
        "path": "/Ac/Out/{phase}/I",
        "type": "float",
        "name": "Output current phase {phase} (A AC)"
      },
      {
        "path": "/Ac/Out/{phase}/P",
        "type": "float",
        "name": "Output power phase {phase} (W)"
      },
      {
        "path": "/Ac/Out/{phase}/V",
        "type": "float",
        "name": "Output voltage phase {phase} (V AC)"
      },
      {
        "path": "/Alarms/{alarm}",
        "type": "enum",
        "name": "{alarm}",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A DC)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V DC)"
      },
      {
        "path": "/Energy/{energy}",
        "type": "float",
        "name": "{energy}"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Error code",
        "enum": {
          "0": "No error",
          "1": "Battery temperature too high",
          "2": "Battery voltage too high",
          "3": "Battery temperature sensor miswired (+)",
          "4": "Battery temperature sensor miswired (-)",
          "5": "Battery temperature sensor disconnected",
          "6": "Battery voltage sense miswired (+)",
          "7": "Battery voltage sense miswired (-)",
          "8": "Battery voltage sense disconnected",
          "9": "Battery voltage wire losses too high",
          "17": "Charger temperature too high",
          "18": "Charger over-current",
          "19": "Charger current polarity reversed",
          "20": "Bulk time limit reached",
          "22": "Charger temperature sensor miswired",
          "23": "Charger temperature sensor disconnected",
          "34": "Input current too high"
        }
      },
      {
        "path": "/Ess/AcPowerSetpoint",
        "type": "float",
        "name": "ESS power setpoint (W)",
        "mode": "both"
      },
      {
        "path": "/Ess/DisableFeedIn",
        "type": "enum",
        "name": "Disable Feed-in",
        "enum": {
          "0": "Feed-in enabled",
          "1": "Feed-in disabled"
        },
        "mode": "both"
      },
      {
        "path": "/Ess/DisableCharge",
        "type": "enum",
        "name": "Disable charge",
        "enum": {
          "0": "Charge enabled",
          "1": "Charge disabled"
        },
        "mode": "both"
      },
      {
        "path": "/Ess/Sustain",
        "type": "enum",
        "name": "Sustain active",
        "enum": {
          "0": "Sustain inactive",
          "1": "Sustain active"
        }
      },
      {
        "path": "/History/Daily/{historyDay}/MaxPower",
        "type": "float",
        "name": "Maximum charge power {historyDay} (W)"
      },
      {
        "path": "/History/Daily/{historyDay}/Yield", 
        "type": "float",
        "name": "Yield {historyDay} (kWh)"
      },
      {
        "path": "/History/Daily/{historyDay}/Pv/{index}/MaxPower",
        "type": "float", 
        "name": "Maximum charge power {historyDay} for tracker {index} (W)"
      },
      {
        "path": "/History/Daily/{historyDay}/Pv/{index}/Yield",
        "type": "float",
        "name": "Yield {historyDay} for tracker {index} (kWh)"
      },
      {
        "path": "/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/0/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker 1",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/0/P",
        "type": "float",
        "name": "PV power for tracker 0 (W)"
      },
      {
        "path": "/Pv/0/V",
        "type": "float",
        "name": "PV voltage for tracker 0 (V DC)"
      },
      {
        "path": "/Pv/1/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker 2",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/1/P",
        "type": "float",
        "name": "PV power for tracker 1 (W)"
      },
      {
        "path": "/Pv/1/V",
        "type": "float",
        "name": "PV voltage for tracker 1 (V DC)"
      },
      {
        "path": "/Pv/2/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker 3",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/2/P",
        "type": "float",
        "name": "PV power for tracker 2 (W)"
      },
      {
        "path": "/Pv/2/V",
        "type": "float",
        "name": "PV voltage for tracker 2 (V DC)"
      },
      {
        "path": "/Pv/3/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker 4",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/3/P",
        "type": "float",
        "name": "PV power for tracker 3 (W)"
      },
      {
        "path": "/Pv/3/V",
        "type": "float",
        "name": "PV voltage for tracker 3 (V DC)"
      },
      {
        "path": "/Pv/V",
        "type": "float",
        "name": "PV voltage (V DC)"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the Multi RS",
        "enum": {
          "0": "Open",
          "1": "Closed"
        }
      },
      {
        "path": "/Settings/Ess/MinimumSocLimit",
        "type": "float",
        "name": "ESS Minimum SOC Limit (%)",
        "mode": "both"
      },
      {
        "path": "/Settings/Ess/Mode",
        "type": "enum",
        "name": "ESS mode",
        "enum": {
          "0": "self-consumption (battery-life)",
          "1": "self-consumption",
          "2": "Keep charged",
          "3": "External control"
        },
        "mode": "both"
      },
      {
        "path": "/Soc",
        "type": "float",
        "name": "Battery State of Charge (%)"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "Inverter/Charger state",
        "enum": {
          "0": "Off",
          "1": "Low Power",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize",
          "8": "Passthru",
          "9": "Inverting",
          "10": "Power assist",
          "11": "Power supply",
          "252": "External control"
        }
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Switch position",
        "enum": {
          "1": "Charger Only",
          "2": "Inverter Only",
          "3": "On",
          "4": "Off"
        },
        "mode": "both"
      },
      {
        "path": "/Yield/Power",
        "type": "float",
        "name": "PV power (W)"
      },
      {
        "path": "/Yield/User",
        "type": "float",
        "name": "User yield (kWh)"
      }
    ]
  },
  "pulsemeter": {
    "help": {
       "both": "<p>This node is for obtaining information from a pulsemeter. In order to use this, set a digital input to <strong>Pulse meter</strong> first via the GUI (Under <i>I/O -> Digital inputs</i>).</p>",
        "input": "",
       "output": ""
    },
    "pulsemeter": [
      {
        "path": "/Count",
        "type": "float",
        "name": "Count (number of pulses on meter)"
      },
      {
        "path": "/Aggregate",
        "type": "float",
        "name": "Aggregate (measured value) (m3)"
      }
    ]
  },
  "pump": {
    "help": {
       "both": "<p>Node for getting pump information.</p>",
      "input": "",
      "output": " "
    },
    "pump": [
      {
        "path": "/State",
        "type": "enum",
        "name": "Pump State",
        "enum": {
          "0": "Stopped",
          "1": "Running"
        }
      }
    ],
    "settings": [
      {
        "path": "/Settings/Pump0/AutoStartEnabled",
        "type": "enum",
        "name": "Auto start enabled",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/Pump0/Mode",
        "type": "enum",
        "name": "Mode",
        "enum": {
          "0": "Auto",
          "1": "On",
          "2": "Off"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/Pump0/StartValue",
        "type": "float",
        "name": "Start value (%)",
        "mode": "both"
      },
      {
        "path": "/Settings/Pump0/StopValue",
        "type": "float",
        "name": "Stop value (%)",
        "mode": "both"
      }
    ]
  },
  "pvinverter": {
    "help": {
       "both": "<p>This node is for obtaining information from the PV inverter.</p>",
      "input": "",
      "output": " "
    },
    "pvinverter": [
      {
        "path": "/Ac/Energy/Forward",
        "type": "float",
        "name": "Total energy (kWh)"
      },
      {
        "path": "/Ac/Frequency",
        "type": "float",
        "name": "AC Frequency (Hz)"
      },
      {
        "path": "/Ac/{line}/Current",
        "type": "float",
        "name": "{line} Current (A)"
      },
      {
        "path": "/Ac/{line}/Energy/Forward",
        "type": "float",
        "name": "{line} Energy (kWh)"
      },
      {
        "path": "/Ac/{line}/Power",
        "type": "float",
        "name": "{line} Power (W)"
      },
      {
        "path": "/Ac/{line}/Voltage",
        "type": "float",
        "name": "{line} Voltage (V)"
      },
      {
        "path": "/Ac/PowerLimit",
        "type": "float",
        "name": "Power limit (W)",
        "mode": "both"
      },
      {
        "path": "/Ac/MaxPower",
        "type": "float",
        "name": "Maximum Power Capacity (kW)"
      },
      {
        "path": "/Ac/Power",
        "type": "float",
        "name": "Total Power (W)"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Error",
        "enum": {
          "0": "No Error"
        }
      },
      {
        "path": "/Position",
        "type": "enum",
        "name": "Position",
        "enum": {
          "0": "AC input 1",
          "1": "AC output",
          "2": "AC input 2"
        }
      },
      {
        "path": "/Serial",
        "type": "string",
        "name": "Serial"
      },
      {
        "path": "/StatusCode",
        "type": "enum",
        "name": "Status",
        "enum": {
          "0": "Startup 0",
          "1": "Startup 1",
          "2": "Startup 2",
          "3": "Startup 3",
          "4": "Startup 4",
          "5": "Startup 5",
          "6": "Startup 6",
          "7": "Running",
          "8": "Standby",
          "9": "Boot loading",
          "10": "Error",
          "11": "Running (MPPT)",
          "12": "Running (Throttled)"
        }
      }
    ]
  },
  "relay": {
    "help": {
       "both": "<p>The <b>relay</b> node reads the state of the relay(s) of the Venus device.</p>",
      "input": "",
      "output": " "
    },
    "system": [
      {
        "path": "/Relay/{relay}/State",
        "type": "enum",
        "name": "Venus relay {relay} state",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ],
    "accharger": [
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the charger",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ],
    "battery": [
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay status",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ],
    "charger": [
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the charger",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ],
    "inverter": [
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay state",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ],
    "multi": [
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the Multi RS",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ],
    "solarcharger": [
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the charger",
        "enum": {
          "0": "Open",
          "1": "Closed"
        },
        "mode": "both"
      }
    ]
  },
  "settings": {
    "help": {
      "both": "<p>With this node several settings can be read. Currently the focus is mainly on the Carlo Gavazzi Wired AC Sensors (cgwacs).</p>",
      "input": "",
      "output" : " "
    },
    "settings": [
      {
        "path": "/Settings/CGwacs/AcExportLimit",
        "type": "float",
        "name": "AC export current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/AcInputLimit",
        "type": "float",
        "name": "AC input current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/AcPowerSetPoint",
        "type": "float",
        "name": "ESS control loop setpoint (W)",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/AlwaysPeakShave",
        "type": "enum",
        "name": "Mode for peakshaving",
        "enum": {
          "0": "Above minimum SOC only",
          "1": "Always"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
        "type": "float",
        "name": "ESS Minimum SoC (unless grid fails) (%)",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/MaxChargePercentage",
        "type": "float",
        "name": "ESS max charge current (fractional) (%)",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/MaxDischargePercentage",
        "type": "float",
        "name": "ESS max discharge current (fractional) (%)",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/MaxFeedInPower",
        "type": "integer",
        "name": "Maximum System Grid Feed In (W)",
        "remarks": "<ul><li>-1: No limit</li><li> &gt;=0: limited system feed-in</li></ul><p>Applies to DC-coupled and AC-coupled feed-in.</p>",
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/OvervoltageFeedIn",
        "type": "enum",
        "name": "Feed excess DC-coupled PV into grid",
        "enum": {
          "0": "Don’t feed excess DC-tied PV into grid",
          "1": "Feed excess DC-tied PV into the grid"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/PreventFeedback",
        "type": "enum",
        "name": "AC-coupled PV - grid feed in excess",
        "enum": {
          "0": "Feed excess AC-tied PV into grid",
          "1": "Don’t feed excess AC-tied PV into the grid"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/SocLimit",
        "type": "float",
        "name": "ESS BatteryLife SoC limit (read only) (%)"
      },
      {
        "path": "/Settings/CGwacs/BatteryLife/State",
        "type": "enum",
        "name": "ESS BatteryLife state",
        "enum": {
          "0": "Unused, BL disabled",
          "1": "Restarting",
          "2": "Self-consumption",
          "3": "Self-consumption",
          "4": "Self-consumption",
          "5": "Discharge disabled",
          "6": "Force charge",
          "7": "Sustain",
          "8": "Low Soc Recharge",
          "9": "Keep batteries charged",
          "10": "BL Disabled",
          "11": "BL Disabled (Low SoC)",
          "12": "BL Disabled (Low SOC recharge)"
        }
      },
      {
        "path": "/Settings/LEDs/Enable",
        "type": "enum",
        "name": "Enable status LEDs",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/SystemSetup/AcInput{index}",
        "type": "enum",
        "name": "AC input {index} source (for VE.Bus inverter/chargers)",
        "enum": {
          "0": "Unused",
          "1": "Grid",
          "2": "Genset",
          "3": "Shore"
        }
      },
      {
        "path": "/Settings/SystemSetup/SystemName",
        "type": "string",
        "name": "System name",
        "mode": "both"
      }
    ],
    "hub4": [
      {
        "path": "/PvPowerLimiterActive",
        "type": "enum",
        "name": "Grid limiting status",
        "remarks": "<p>Applies to both AC-coupled and DC-coupled limiting.</p>",
        "enum": {
          "0": "Feed-in limiting is inactive",
          "1": "Feed-in limiting is active"
        }
      }
    ]
  },
  "solarcharger": {
    "help": {
       "both": "<p>Information from the Solar charger can be read with this node.</p>",
       "input": "",
       "output": " "
    },
    "solarcharger": [
      {
        "path": "/Alarms/Alarm",
        "type": "enum",
        "name": "Alarm",
        "enum": {
          "0": "No alarm",
          "2": "Alarm"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V)"
      },
      {
        "path": "/Equalization/Pending",
        "type": "enum",
        "name": "Equalization pending",
        "enum": {
          "0": "No",
          "1": "Yes",
          "2": "Error",
          "3": "Unavailable- Unknown"
        }
      },
      {
        "path": "/Equalization/TimeRemaining",
        "type": "float",
        "name": "Equalization time remaining (seconds)"
      },
      {
        "path": "/ErrorCode",
        "type": "enum",
        "name": "Error code",
        "enum": {
          "0": "No error",
          "1": "#1 - Battery temperature too high",
          "2": "#2 - Battery voltage too high",
          "3": "#3 - Battery temperature sensor miswired (+)",
          "4": "#4 - Battery temperature sensor miswired (-)",
          "5": "#5 - Battery temperature sensor disconnected",
          "6": "#6 - Battery voltage sense miswired (+)",
          "7": "#7 - Battery voltage sense miswired (-)",
          "8": "#8 - Battery voltage sense disconnected",
          "9": "#9 - Battery voltage wire losses too high",
          "10": "#10 - Battery voltage too low",
          "11": "#11 - Battery ripple voltage on terminals too high",
          "12": "#12 - Battery low state of charge",
          "13": "#13 - Battery mid-point voltage issue",
          "14": "#14 - Battery temperature too low",
          "17": "#17 - Charger temperature too high",
          "18": "#18 - Charger over-current",
          "19": "#19 - Charger current polarity reversed",
          "20": "#20 - Max Bulk-time exceeded",
          "21": "#21 - Charger current sensor issue",
          "22": "#22 - Temperature sensor miswired",
          "23": "#23 - Charger temperature sensor disconnected",
          "24": "#24 - Charger internal fan not detected",
          "25": "#25 - Charger internal fan over-current",
          "26": "#26 - Charger terminal overheated",
          "27": "#27 - Charger short circuit",
          "28": "#28 - Charger issue with power stage",
          "29": "#29 - Over-charge protection",
          "31": "#31 - Input voltage out of range",
          "32": "#32 - Input voltage too low",
          "33": "#33 - Input voltage too high",
          "34": "#34 - PV over current",
          "35": "#35 - Input excessive power",
          "36": "#36 - Input polarity issue",
          "37": "#37 - Input voltage absent (mains removed, fuse blown?)",
          "38": "#38 - Input shutdown due to battery over-voltage",
          "39": "#39 - Input shutdown due to battery over-voltage",
          "40": "#40 - Internal failure (PV Input failed to shutdown)",
          "41": "#41 - Inverter shutdown (panel isolation resistance too low)",
          "42": "#42 - Inverter shutdown (ground current too high: >30mA)",
          "43": "#43 - Inverter shutdown (voltage over ground relay too high)",
          "50": "#50 - Inverter overload (iit protection)",
          "51": "#51 - Inverter temperature too high",
          "52": "#52 - Inverter excessive current",
          "53": "#53 - Inverter dc level (internal dc rail voltage)",
          "54": "#54 - Inverter ac level (output voltage not ok)",
          "55": "#55 - Inverter dc fail (dc on output)",
          "56": "#56 - Inverter ac fail (shape wrong)*/",
          "57": "#57 - Inverter ac on output (inverter only)",
          "58": "#58 - Inverter bridge fault (hardware signal)",
          "59": "#59 - ACIN1 relay test fault",
          "60": "#60 - ACIN2 relay test fault",
          "65": "#65 - Device disappeared during parallel operation (broken cable?)",
          "66": "#66 - Incompatible device encountered for parallel operation (e.g. old firmware/different settings)",
          "67": "#67 - No BMS",
          "68": "#68 - Network misconfigured",
          "113": "#113 - Non-volatile storage write error",
          "114": "#114 - CPU temperature to high",
          "115": "#115 - CAN/SCI communication lost (when critical)",
          "116": "#116 - Calibration data lost",
          "117": "#117 - Incompatible firmware encountered",
          "118": "#118 - Incompatible hardware encountered",
          "119": "#119 - Settings data lost",
          "120": "#120 - Reference voltage failure",
          "121": "#121 - Tester fail",
          "122": "#122 - Non-volatile history data invalid/corrupted",
          "200": "#200 - Internal error",
          "201": "#201 - Internal error",
          "203": "#203 - Internal error",
          "205": "#205 - Internal error",
          "212": "#212 - Internal error",
          "215": "#215 - Internal error"
        }
      },
      {
        "path": "/History/Daily/{historyDay}/MaxPower",
        "type": "float",
        "name": "Maximum charge power {historyDay} (W)"
      },
      {
        "path": "/History/Daily/{historyDay}/Yield", 
        "type": "float",
        "name": "Yield {historyDay} (kWh)"
      },
      {
        "path": "/History/Daily/{historyDay}/Pv/{index}/MaxPower",
        "type": "float", 
        "name": "Maximum charge power {historyDay} for tracker {index} (W)"
      },
      {
        "path": "/History/Daily/{historyDay}/Pv/{index}/Yield",
        "type": "float",
        "name": "Yield {historyDay} for tracker {index} (kWh)"
      },
      {
        "path": "/Load/State",
        "type": "enum",
        "name": "Load state",
        "enum": {
          "0": "Off",
          "1": "On"
        }
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Charger on/off",
        "enum": {
          "1": "On",
          "4": "Off"
        },
       "mode": "both"
      },
      {
        "path": "/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode",
        "enum": {
          "0": "Off",
          "1": "Voltage or current limited",
          "2": "MPPT Tracker active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/0/MppOperationMode",
        "type": "enum",
        "name": "MPP operation mode tracker 1",
        "enum": {
          "0": "Off",
          "1": "Voltage/current limited",
          "2": "MPPT active",
          "255": "Not available"
        }
      },
      {
        "path": "/Pv/{tracker}/P",
        "type": "float",
        "name": "Tracker {tracker} power"
      },
      {
        "path": "/Pv/{tracker}/V",
        "type": "float",
        "name": "Tracker {tracker} voltage"
      },
      {
        "path": "/Pv/V",
        "type": "float",
        "name": "PV voltage"
      },
      {
        "path": "/Relay/0/State",
        "type": "enum",
        "name": "Relay on the charger",
        "enum": {
          "0": "Open",
          "1": "Closed"
        }
      },
      {
        "path": "/Settings/ChargeCurrentLimit",
        "type": "float",
        "name": "The maximum configured (non-volatile) charge current (A). This is the same as set by VictronConnect.",
       "mode": "both"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "Charge state",
        "enum": {
          "0": "Off",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize",
          "245": "Off",
          "247": "Equalize",
          "252": "External Control"
        }
      },
      {
        "path": "/Yield/Power",
        "type": "float",
        "name": "PV Power (W)"
      },
      {
        "path": "/Yield/System",
        "type": "string",
        "name": "Yield since last update (kWh)"
      },
      {
        "path": "/Yield/User",
        "type": "string",
        "name": "Yield since reset (kWh)"
      }
    ]
  },
  "system": {
    "help": {
      "both": "<p>This input node takes is for retrieving information from the <tt>com.victronenergy.system</tt> dbus path.</p>",
      "input": "",
      "output": ""
    },
    "system": [
      {
        "path": "/Ac/ActiveIn/Source",
        "type": "enum",
        "name": "AC-Input",
        "enum": {
          "0": "Not available",
          "1": "Grid",
          "2": "Generator",
          "3": "Shore",
          "240": "Inverting"
        }
      },
      {
        "path": "/Ac/Consumption/{line}/Power",
        "type": "float",
        "name": "AC Consumption {line} (W)"
      },
      {
        "path": "/Ac/ConsumptionOnInput/{line}/Power",
        "type": "float",
        "name": "Power between meter and inverter/charger, {line} (W)"
      },
      {
        "path": "/Ac/ConsumptionOnOutput/{line}/Power",
        "type": "float",
        "name": "Power on output of inverter/charger, {line} (W)"
      },
      {
        "path": "/Ac/Genset/DeviceType",
        "type": "float",
        "name": "Genset Device Type",
        "enum": {}
      },
      {
        "path": "/Ac/Genset/{line}/Power",
        "type": "float",
        "name": "Genset {line} (W)"
      },
      {
        "path": "/Ac/Genset/NumberOfPhases",
        "type": "integer",
        "name": "Genset Number Of Phases"
      },
      {
        "path": "/Ac/Grid/DeviceType",
        "type": "float",
        "name": "Grid Device Type"
      },
      {
        "path": "/Ac/Grid/{line}/Power",
        "type": "float",
        "name": "Grid {line} (W)"
      },
      {
        "path": "/Ac/Grid/NumberOfPhases",
        "type": "integer",
        "name": "Grid Number Of Phases"
      },
      {
        "path": "/Ac/PvOnGenset/{line}/Power",
        "type": "float",
        "name": "PV Power AC-tied on Generator {line}"
      },
      {
        "path": "/Ac/PvOnGenset/NumberOfPhases",
        "type": "integer",
        "name": "PV Power AC-tied on Generator Number Of Phases"
      },
      {
        "path": "/Ac/PvOnGrid/{line}/Power",
        "type": "float",
        "name": "PV - AC-coupled on input {line} (W)"
      },
      {
        "path": "/Ac/PvOnGrid/NumberOfPhases",
        "type": "integer",
        "name": "PV - AC-coupled on input Number Of Phases"
      },
      {
        "path": "/Ac/PvOnOutput/{line}/Power",
        "type": "float",
        "name": "PV - AC-coupled on output {line} (W)"
      },
      {
        "path": "/Ac/PvOnOutput/NumberOfPhases",
        "type": "integer",
        "name": "PV - AC-coupled on output Number Of Phases"
      },
      {
        "path": "/Buzzer/State",
        "type": "float",
        "name": "Buzzer State",
        "enum": {
          "0": "Off",
          "1": "On"
        }
      },
      {
        "path": "/Control/ActiveSocLimit",
        "type": "integer",
        "name": "ESS active SOC limit (%)"
      },
      {
        "path": "/Dc/Battery/ConsumedAmphours",
        "type": "float",
        "name": "Battery Consumed Amphours (Ah)"
      },
      {
        "path": "/Dc/Battery/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/Battery/Power",
        "type": "float",
        "name": "Battery Power (W)"
      },
      {
        "path": "/Dc/Battery/Soc",
        "type": "float",
        "name": "Battery State of Charge (%)"
      },
      {
        "path": "/Dc/Battery/State",
        "type": "enum",
        "name": "Battery state",
        "enum": {
          "0": "idle",
          "1": "charging",
          "2": "discharging"
        }
      },
      {
        "path": "/Dc/Battery/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/Battery/TimeToGo",
        "type": "float",
        "name": "Battery Time to Go (s)"
      },
      {
        "path": "/Dc/Battery/Voltage",
        "type": "float",
        "name": "Battery voltage (V)"
      },
      {
        "path": "/Dc/Charger/Power",
        "type": "integer",
        "name": "AC-Chargers - power (W)"
      },
      {
        "path": "/Dc/InverterCharger/Current",
        "type": "float",
        "name": "Inverter/Charger current"
      },
      {
        "path": "/Dc/InverterCharger/Power",
        "type": "float",
        "name": "Inverter/Charger power"
      },
      {
        "path": "/Dc/Pv/Current",
        "type": "float",
        "name": "MPPTs - current (A)"
      },
      {
        "path": "/Dc/Pv/Power",
        "type": "float",
        "name": "MPPTs - power (W)"
      },
      {
        "path": "/Dc/System/Power",
        "type": "float",
        "name": "DC System (W)"
      },
      {
        "path": "/Dc/Vebus/Current",
        "type": "float",
        "name": "VE.Bus charge current (A)"
      },
      {
        "path": "/Dc/Vebus/Power",
        "type": "float",
        "name": "VE.Bus charge power (W)"
      },
      {
        "path": "/Serial",
        "type": "string",
        "name": "Serial (System)"
      },
      {
        "path": "/SystemType",
        "type": "string",
        "name": "System type"
      },
      {
        "path": "/Timers/TimeOff",
        "type": "float",
        "name": "Time off (s)"
      },
      {
        "path": "/Timers/TimeOnGenerator",
        "type": "float",
        "name": "Time generator (s)"
      },
      {
        "path": "/Timers/TimeOnGrid",
        "type": "float",
        "name": "Time grid (s)"
      },
      {
        "path": "/Timers/TimeOnInverter",
        "type": "float",
        "name": "Time inverting (s)"
      }
    ]
  },
  "tank": {
    "help": {
       "both": "<p>The tank node is for retrieving tank level sensor information.</p><p>Also see the <a href=\"https://www.victronenergy.com/media/pg/Cerbo_GX/en/installation.html#UUID-e4027d37-78e0-4433-1be4-3252d3b79152\">manual</a> for more information.</p>",
       "input": "",
       "output": ""
     },
    "tank": [
      {
        "path": "/Capacity",
        "type": "float",
        "name": "Tank capacity (m3)",
        "mode": "both"
      },
      {
        "path": "/FluidType",
        "type": "enum",
        "name": "Fluid type",
        "enum": {
          "0": "Fuel",
          "1": "Fresh water",
          "2": "Waste water",
          "3": "Live well",
          "4": "Oil",
          "5": "Black water (sewage)",
          "6": "Gasoline",
          "7": "Diesel",
          "8": "Liquid Petroleum Gas (LPG)",
          "9": "Liquid Natural Gas (LNG)",
          "10": "Hydraulic oil",
          "11": "Raw water"
        },
        "mode": "both"
      },
      {
        "path": "/Level",
        "type": "float",
        "name": "Tank level (%)"
      },
      {
        "path": "/ProductId",
        "type": "float",
        "name": "Product ID"
      },
      {
        "path": "/Remaining",
        "type": "float",
        "name": "Fluid remaining (m3)"
      },
      {
        "path": "/Status",
        "type": "enum",
        "name": "Tank sensor status",
        "enum": {
          "0": "Ok",
          "1": "Open circuit",
          "2": "Short circuited",
          "3": "Reverse polarity",
          "4": "Unknown"
        }
      }
    ]
  },
  "temperature": {
    "help": {
      "both": "<p>Like the other nodes, the <b>temperature</b> node reads the temperate information from the dbus. This means that source of the temperature sensor can obtain its information from different sources (e.g. directly connected probe or Bluetooth connected Ruuvi tag).</p><p>See the <a href=\"https://www.victronenergy.com/media/pg/Cerbo_GX/en/installation.html#UUID-4d5df29c-761e-cfcc-9e2c-8230f126e7bb\">manual</a> for information on connecting a temperature sensor.</p><p>Tank sensors also expose temperature, so they can appear under the dropdown too.</p>",
       "input": "",
       "output": ""
    },
    "temperature": [
      {
        "path": "/AccelX",
        "type": "float",
        "name": "Acceleration X (g)"
      },
      {
        "path": "/AccelY",
        "type": "float",
        "name": "Acceleration Y (g)"
      },
      {
        "path": "/AccelZ",
        "type": "float",
        "name": "Acceleration Z (g)"
      },
      {
        "path": "/BatteryVoltage",
        "type": "float",
        "name": "Sensor battery voltage (V)"
      },
      {
        "path": "/Humidity",
        "type": "float",
        "name": "Humidity (%)"
      },
      {
        "path": "/Offset",
        "type": "float",
        "name": "Temperature offset"
      },
      {
        "path": "/Pressure",
        "type": "float",
        "name": "Pressure (kPa)"
      },
      {
        "path": "/ProductId",
        "type": "float",
        "name": "Product ID"
      },
      {
        "path": "/Scale",
        "type": "float",
        "name": "Temperature scale factor"
      },
      {
        "path": "/Status",
        "type": "enum",
        "name": "Sensor status",
        "enum": {
          "0": "Ok",
          "1": "Open circuit",
          "2": "Short circuited",
          "3": "Reverse polarity",
          "4": "Unknown"
        }
      },
      {
        "path": "/Temperature",
        "type": "float",
        "name": "Temperature (°C)"
      },
      {
        "path": "/TemperatureType",
        "type": "enum",
        "name": "Sensor type",
        "enum": {
          "0": "Battery",
          "1": "Fridge",
          "2": "Generic",
          "3": "Room;",
          "4": "Outdoor",
          "5": "WaterHeater",
          "6": "Freezer"
        },
        "mode": "both"
      }
    ],
    "tank": [
      {
        "path": "/BatteryVoltage",
        "type": "float",
        "name": "Sensor battery voltage (V)"
      },
      {
        "path": "/Temperature",
        "type": "float",
        "name": "Temperature (°C)"
      }
    ]
  },
  "vebus": {
    "help": {
       "both": "<p>Information from VE.Bus connected devices can be obtained with this node.</p>",
       "input": "",
       "output": " "
    },
    "vebus": [
      {
        "path": "/Ac/ActiveIn/ActiveInput",
        "type": "enum",
        "name": "Active input",
        "enum": {
          "0": "AC Input 1",
          "1": "AC Input 2",
          "240": "Disconnected"
        }
      },
      {
        "path": "/Ac/ActiveIn/CurrentLimit",
        "type": "float",
        "name": "Active input current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Ac/ActiveIn/L{index}/F",
        "type": "float",
        "name": "Input frequency phase {index} (Hz)"
      },
      {
        "path": "/Ac/ActiveIn/L{index}/I",
        "type": "float",
        "name": "Input current phase {index} (A)"
      },
      {
        "path": "/Ac/ActiveIn/L{index}/P",
        "type": "float",
        "name": "Input power phase {index} (W)"
      },
      {
        "path": "/Ac/ActiveIn/L{index}/V",
        "type": "float",
        "name": "Input voltage phase {index} (VAC)"
      },
      {
        "path": "/Ac/Control/RemoteGeneratorSelected",
        "type": "enum",
        "name": "Select Remote Generator",
        "enum": {
          "0": "Generator not selected",
          "1": "Generator selected"
        },
        "mode": "both"
      },
      {
        "path": "/Ac/In/{index}/CurrentLimit",
        "type": "float",
        "name": "Input {index} current limit (A)",
        "mode": "both"
      },
      {
        "path": "/Ac/In/{index}/CurrentLimitIsAdjustable",
        "type": "enum",
        "name": "Input {index} current limit is adjustable",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      },
      {
        "path": "/Ac/NumberOfPhases",
        "type": "float",
        "name": "Phase count"
      },
      {
        "path": "/Ac/Out/{phase}/F",
        "type": "float",
        "name": "Output frequency phase {phase} (Hz)"
      },
      {
        "path": "/Ac/Out/{phase}/I",
        "type": "float",
        "name": "Output current phase {phase} (A)"
      },
      {
        "path": "/Ac/Out/{phase}/P",
        "type": "float",
        "name": "Output power phase {phase} (W)"
      },
      {
        "path": "/Ac/Out/{phase}/V",
        "type": "float",
        "name": "Output voltage phase {phase} (VAC)"
      },
      {
        "path": "/Ac/State/IgnoreAcIn{index}",
        "type": "enum",
        "name": "AC input {index} ignored",
        "enum": {
          "0": "AC input not ignored",
          "1": "AC input ignored"
        }
      },
      {
        "path": "/Ac/State/RemoteGeneratorSelected",
        "type": "enum",
        "name": "Remote generator selected",
        "enum": {
          "0": "Generator not selected",
          "1": "Generator selected"
        }
      },
      {
        "path": "/Alarms/{phase}/{alarm}",
        "type": "enum",
        "name": "{alarm} {phase}",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Alarms/{alarm}",
        "type": "enum",
        "name": "{alarm}",
        "enum": {
          "0": "Ok",
          "1": "Warning",
          "2": "Alarm"
        }
      },
      {
        "path": "/Bms/{bms}",
        "type": "enum",
        "name": "{bms}",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      },
      {
        "path": "/Dc/0/Current",
        "type": "float",
        "name": "Battery current (A)"
      },
      {
        "path": "/Dc/0/PreferRenewableEnergy",
        "type": "enum",
        "name": "Prefer Renewable Energy",
        "enum": {
          "0": "Renewable energy not preferred",
          "1": "Renewable energy preferred"
        },
        "mode": "both"
      },
      {
        "path": "/Dc/0/Temperature",
        "type": "float",
        "name": "Battery temperature (°C)"
      },
      {
        "path": "/Dc/0/Voltage",
        "type": "float",
        "name": "Battery voltage (V)"
      },
      {
        "path": "/Devices/0/Settings/AssistCurrentBoostFactor",
        "type": "float",
        "name": "Configured boost factor for VE.Bus unit 1",
        "mode": "both"
      },
      {
        "path": "/Devices/0/Settings/InverterOutputVoltage",
        "type": "float",
        "name": "Configured output voltage for VE.Bus unit 1 (V AC)",
        "mode": "both"
      },
      {
        "path": "/Devices/0/Settings/PowerAssistEnabled",
        "type": "enum",
        "name": "PowerAssist enabled unit 1",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        },
        "mode": "both"
      },
      {
        "path": "/Energy/AcIn1ToAcOut",
        "type": "float",
        "name": "Energy ACIn1 to AcOut (kWh)"
      },
      {
        "path": "/Energy/AcIn1ToInverter",
        "type": "float",
        "name": "Energy AcIn1 to Inverter (kWh)"
      },
      {
        "path": "/Energy/AcIn2ToAcOut",
        "type": "float",
        "name": "Energy ACIn2 to AcOut (kWh)"
      },
      {
        "path": "/Energy/AcIn2ToInverter",
        "type": "float",
        "name": "Energy ACIn2 to Inverter (kWh)"
      },
      {
        "path": "/Energy/AcOutToAcIn1",
        "type": "float",
        "name": "Energy AcOut to AcIn1 (kWh)"
      },
      {
        "path": "/Energy/AcOutToAcIn2",
        "type": "float",
        "name": "Energy AcOut to AcIn2 (kWh)"
      },
      {
        "path": "/Energy/InverterToAcIn1",
        "type": "float",
        "name": "Energy Inverter to AcIn1 (kWh)"
      },
      {
        "path": "/Energy/InverterToAcIn2",
        "type": "float",
        "name": "Energy Inverter to AcIn2 (kWh)"
      },
      {
        "path": "/Energy/InverterToAcOut",
        "type": "float",
        "name": "Inverter To AcOut (kWh)"
      },
      {
        "path": "/Energy/OutToInverter",
        "type": "float",
        "name": "AcOut to Inverter (kWh)"
      },
      {
        "path": "/Hub4/DisableCharge",
        "type": "enum",
        "name": "ESS disable charge flag phase",
        "enum": {
          "0": "Charge allowed",
          "1": "Charge disabled"
        },
        "mode": "both"
      },
      {
        "path": "/Hub4/DisableFeedIn",
        "type": "enum",
        "name": "ESS disable feedback flag phase",
        "enum": {
          "0": "Feed in allowed",
          "1": "Feed in disabled"
        },
        "mode": "both"
      },
      {
        "path": "/Hub4/DoNotFeedInOvervoltage",
        "type": "enum",
        "name": "Feed DC overvoltage into grid",
        "enum": {
          "0": "Feed in overvoltage",
          "1": "Do not feed in overvoltage"
        },
        "mode": "both"
      },
      {
        "path": "/Hub4/FixSolarOffsetTo100mV",
        "type": "enum",
        "name": "Solar offset voltage",
        "enum": {
          "0": "OvervoltageFeedIn uses 1V offset",
          "1": "OvervoltageFeedIn uses 0.1V offset"
        }
      },
      {
        "path": "/Hub4/{phase}/AcPowerSetpoint",
        "type": "float",
        "name": "ESS power setpoint phase {phase} (W)",
        "mode": "both"
      },
      {
        "path": "/Hub4/{phase}/MaxFeedInPower",
        "type": "float",
        "name": "Maximum overvoltage feed-in power {phase} (W)",
        "mode": "both"
      },
      {
        "path": "/Hub4/Sustain",
        "type": "enum",
        "name": "Sustain active",
        "enum": {
          "0": "Sustain inactive",
          "1": "Sustain active"
        }
      },
      {
        "path": "/Hub4/TargetPowerIsMaxFeedIn",
        "type": "enum",
        "name": "AcPowerSetpoint acts as feed-in limit",
        "enum": {
          "0": "AcPowerSetpoint interpreted normally",
          "1": "AcPowerSetpoint is OvervoltageFeedIn limit"
        },
        "mode": "both"
      },
      {
        "path": "/Mode",
        "type": "enum",
        "name": "Switch Position",
        "enum": {
          "1": "Charger Only",
          "2": "Inverter Only",
          "3": "On",
          "4": "Off"
        },
        "mode": "both"
      },
      {
        "path": "/ModeIsAdjustable",
        "type": "enum",
        "name": "Mode is adjustable",
        "enum": {
          "0": "No",
          "1": "Yes"
        }
      },
      {
        "path": "/PvInverter/Disable",
        "type": "enum",
        "name": "Disable PV inverter",
        "enum": {
          "0": "No",
          "1": "Yes"
        },
        "mode": "both"
      },
      {
        "path": "/RedetectSystem",
        "type": "enum",
        "name": "Redetect VE.Bus system",
        "enum": {
          "0": "No action",
          "1": "Redetect system"
        },
        "mode": "output"
      },
      {
        "path": "/Settings/AssistCurrentBoostFactor",
        "type": "float",
        "name": "Power Assist boost factor",
        "mode": "both"
      },
      {
        "path": "/Settings/InverterOutputVoltage",
        "type": "float",
        "name": "Configured output voltage (V AC)",
        "mode": "both"
      },
      {
        "path": "/Settings/PowerAssistEnabled",
        "type": "enum",
        "name": "PowerAssist enabled",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        },
        "mode": "both"
      },
      {
        "path": "/Settings/UpsFunction",
        "type": "enum",
        "name": "UPS function enabled",
        "enum": {
          "0": "Disabled",
          "1": "Enabled"
        },
        "mode": "both"
      },
      {
        "path": "/Soc",
        "type": "float",
        "name": "VE.Bus state of charge (%)"
      },
      {
        "path": "/State",
        "type": "enum",
        "name": "VE.Bus state",
        "enum": {
          "0": "Off",
          "1": "Low Power",
          "2": "Fault",
          "3": "Bulk",
          "4": "Absorption",
          "5": "Float",
          "6": "Storage",
          "7": "Equalize",
          "8": "Passthru",
          "9": "Inverting",
          "10": "Power assist",
          "11": "Power supply",
          "252": "External control"
        }
      },
      {
        "path": "/SystemReset",
        "type": "enum",
        "name": "VE.Bus Reset",
        "enum": {
          "0": "No",
          "1": "Yes"
        },
        "mode": "output"
      },
      {
        "path": "/VebusChargeState",
        "type": "enum",
        "name": "Charge state",
        "enum": {
          "0": "Initialising",
          "1": "Bulk",
          "2": "Absorption",
          "3": "Float",
          "4": "Storage",
          "5": "Absorb repeat",
          "6": "Forced absorb",
          "7": "Equalise",
          "8": "Bulk stopped",
          "9": "Unknown"
        }
      },
      {
        "path": "/VebusError",
        "type": "enum",
        "name": "VE.Bus Error",
        "enum": {
          "0": "No error",
          "1": "VE.Bus Error 1: Device is switched off because one of the other phases in the system has switched off",
          "2": "VE.Bus Error 2: New and old types MK2 are mixed in the system",
          "3": "VE.Bus Error 3: Not all, or more than, the expected devices were found in the system",
          "4": "VE.Bus Error 4: No other device whatsoever detected",
          "5": "VE.Bus Error 5: Overvoltage on AC-out",
          "6": "VE.Bus Error 6: Error in DDC Program",
          "7": "VE.Bus Error 7:  BMS connected, which requires an Assistant, but no assistant found",
          "8": "VE.Bus Error 8: Ground relay test failed",
          "9": "VE.Bus Error 9",
          "10": "VE.Bus Error 10: System time synchronisation problem occurred",
          "11": "VE.Bus Error 11: Relay test fault",
          "12": "VE.Bus Error 12",
          "13": "VE.Bus Error 13",
          "14": "VE.Bus Error 14: Device cannot transmit data",
          "15": "VE.Bus Error 15",
          "16": "VE.Bus Error 16: Awaiting configuration or dongle missing",
          "17": "VE.Bus Error 17: Phase master missing",
          "18": "VE.Bus Error 18: AC Overvoltage on the output of a slave has occurred while already switched off",
          "19": "VE.Bus Error 19",
          "20": "VE.Bus Error 20",
          "21": "VE.Bus Error 21",
          "22": "VE.Bus Error 22: This device cannot function as slave",
          "23": "VE.Bus Error 23",
          "24": "VE.Bus Error 24: Switch-over system protection initiated",
          "25": "VE.Bus Error 25: Firmware incompatibility. The firmware of one of the connected device is not sufficiently up to date to operate in conjunction with this device",
          "26": "VE.Bus Error 26: Internal error",
          "27": "VE.Bus Error 27",
          "28": "VE.Bus Error 28",
          "29": "VE.Bus Error 29",
          "30": "VE.Bus Error 30",
          "31": "VE.Bus Error 31",
          "32": "VE.Bus Error 32"
        }
      }
    ]
  }
}
